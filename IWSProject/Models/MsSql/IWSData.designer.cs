#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IWSProject.Models.MsSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[DatabaseAttribute(Name="consolid")]
	public partial class IWSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDepreciationDetail(DepreciationDetail instance);
    partial void UpdateDepreciationDetail(DepreciationDetail instance);
    partial void DeleteDepreciationDetail(DepreciationDetail instance);
    #endregion
		
		public IWSDataContext() : 
				base(global::IWSProject.Properties.Settings.Default.consolidConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public IWSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IWSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IWSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IWSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DepreciationDetail> DepreciationDetails
		{
			get
			{
				return this.GetTable<DepreciationDetail>();
			}
		}
		
		[FunctionAttribute(Name="dbo.account1To7")]
		public ISingleResult<account1To7Result> account1To7([ParameterAttribute(DbType="NVarChar(6)")] string start, [ParameterAttribute(DbType="NVarChar(6)")] string end, [ParameterAttribute(DbType="NVarChar(6)")] string companyid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), start, end, companyid);
			return ((ISingleResult<account1To7Result>)(result.ReturnValue));
		}
		
		[FunctionAttribute(Name="dbo.ClassAccountBalance")]
		public ISingleResult<ClassAccountBalanceResult> ClassAccountBalance([ParameterAttribute(Name="class", DbType="NVarChar(12)")] string @class, [ParameterAttribute(DbType="NVarChar(6)")] string start, [ParameterAttribute(DbType="NVarChar(6)")] string end, [ParameterAttribute(DbType="NVarChar(6)")] string companyid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), @class, start, end, companyid);
			return ((ISingleResult<ClassAccountBalanceResult>)(result.ReturnValue));
		}
		
		[FunctionAttribute(Name="dbo.ClassAccountBalances")]
		public ISingleResult<ClassAccountBalancesResult> ClassAccountBalances([ParameterAttribute(DbType="NVarChar(6)")] string start, [ParameterAttribute(DbType="NVarChar(6)")] string end, [ParameterAttribute(DbType="NVarChar(6)")] string companyid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), start, end, companyid);
			return ((ISingleResult<ClassAccountBalancesResult>)(result.ReturnValue));
		}
		
		[FunctionAttribute(Name="dbo.GetAccountBalance", IsComposable=true)]
		public IQueryable<GetAccountBalanceResult> GetAccountBalance([ParameterAttribute(DbType="NVarChar(50)")] string id, [ParameterAttribute(DbType="NVarChar(6)")] string start, [ParameterAttribute(DbType="NVarChar(6)")] string end, [ParameterAttribute(DbType="NVarChar(6)")] string companyid)
		{
			return this.CreateMethodCallQuery<GetAccountBalanceResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, start, end, companyid);
		}
		
		[FunctionAttribute(Name="dbo.GetAccountBalances", IsComposable=true)]
		public IQueryable<GetAccountBalancesResult> GetAccountBalances([ParameterAttribute(Name="class", DbType="NVarChar(12)")] string @class, [ParameterAttribute(DbType="NVarChar(6)")] string start, [ParameterAttribute(DbType="NVarChar(6)")] string end, [ParameterAttribute(DbType="NVarChar(6)")] string companyid)
		{
			return this.CreateMethodCallQuery<GetAccountBalancesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), @class, start, end, companyid);
		}
		
		[FunctionAttribute(Name="dbo.GetBalanceSheetChildren", IsComposable=true)]
		public IQueryable<GetBalanceSheetChildrenResult> GetBalanceSheetChildren([ParameterAttribute(DbType="NVarChar(50)")] string id, [ParameterAttribute(DbType="NVarChar(50)")] string companyid, [ParameterAttribute(DbType="Bit")] System.Nullable<bool> isBalanceSheetAccount)
		{
			return this.CreateMethodCallQuery<GetBalanceSheetChildrenResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, companyid, isBalanceSheetAccount);
		}
		
		[FunctionAttribute(Name="dbo.GetChildren", IsComposable=true)]
		public IQueryable<GetChildrenResult> GetChildren([ParameterAttribute(DbType="NVarChar(50)")] string id, [ParameterAttribute(DbType="NVarChar(50)")] string companyid)
		{
			return this.CreateMethodCallQuery<GetChildrenResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, companyid);
		}
		
		[FunctionAttribute(Name="dbo.GetParents", IsComposable=true)]
		public IQueryable<GetParentsResult> GetParents([ParameterAttribute(DbType="NVarChar(50)")] string id, [ParameterAttribute(DbType="NVarChar(50)")] string companyid)
		{
			return this.CreateMethodCallQuery<GetParentsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, companyid);
		}
		
		[FunctionAttribute(Name="dbo.LogException")]
		public int LogException([ParameterAttribute(Name="Message", DbType="NVarChar(256)")] string message, [ParameterAttribute(Name="Type", DbType="NVarChar(256)")] string type, [ParameterAttribute(Name="Source", DbType="NVarChar(256)")] string source, [ParameterAttribute(Name="URL", DbType="NVarChar(256)")] string uRL, [ParameterAttribute(Name="Target", DbType="NVarChar(256)")] string target, [ParameterAttribute(Name="ComapnyId", DbType="NVarChar(6)")] string comapnyId, [ParameterAttribute(Name="UserName", DbType="NVarChar(6)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), message, type, source, uRL, target, comapnyId, userName);
			return ((int)(result.ReturnValue));
		}
		
		[FunctionAttribute(Name="dbo.GetFiscalYears")]
		public ISingleResult<GetFiscalYearsResult> GetFiscalYears([ParameterAttribute(DbType="NVarChar(6)")] string companyid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyid);
			return ((ISingleResult<GetFiscalYearsResult>)(result.ReturnValue));
		}
		
		[FunctionAttribute(Name="dbo.CloseFiscalYear")]
		public ISingleResult<CloseFiscalYearResult> CloseFiscalYear([ParameterAttribute(DbType="NVarChar(6)")] string companyId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyId);
			return ((ISingleResult<CloseFiscalYearResult>)(result.ReturnValue));
		}
		
		[FunctionAttribute(Name="dbo.OpenFiscalYear")]
		public int OpenFiscalYear([ParameterAttribute(Name="NStart", DbType="VarChar(6)")] string nStart, [ParameterAttribute(Name="NEnd", DbType="VarChar(6)")] string nEnd, [ParameterAttribute(Name="CompanyId", DbType="VarChar(50)")] string companyId, [ParameterAttribute(Name="Current", DbType="Bit")] System.Nullable<bool> current, [ParameterAttribute(Name="Open", DbType="Bit")] System.Nullable<bool> open)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nStart, nEnd, companyId, current, open);
			return ((int)(result.ReturnValue));
		}
		
		[FunctionAttribute(Name="dbo.GetBrouillard")]
		public ISingleResult<GetBrouillardResult> GetBrouillard([ParameterAttribute(Name="TypeDoc", DbType="VarChar(2)")] string typeDoc, [ParameterAttribute(Name="NumPiece", DbType="VarChar(15)")] string numPiece, [ParameterAttribute(Name="CompanyId", DbType="VarChar(15)")] string companyId, [ParameterAttribute(Name="ItemId", DbType="Int")] System.Nullable<int> itemId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeDoc, numPiece, companyId, itemId);
			return ((ISingleResult<GetBrouillardResult>)(result.ReturnValue));
		}
		
		[FunctionAttribute(Name="dbo.PeriodicBalances")]
		public ISingleResult<PeriodicBalancesResult> PeriodicBalances([ParameterAttribute(DbType="NVarChar(550)")] string selectedIDs, [ParameterAttribute(DbType="NVarChar(4)")] string companyid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), selectedIDs, companyid);
			return ((ISingleResult<PeriodicBalancesResult>)(result.ReturnValue));
		}
		
		[FunctionAttribute(Name="dbo.SetTypeJournal")]
		public int SetTypeJournal([ParameterAttribute(DbType="VarChar(100)")] string typedoc, [ParameterAttribute(DbType="Int")] System.Nullable<int> transid, [ParameterAttribute(DbType="NVarChar(50)")] string companyid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typedoc, transid, companyid);
			return ((int)(result.ReturnValue));
		}
		
		[FunctionAttribute(Name="dbo.GetChild", IsComposable=true)]
		public IQueryable<GetChildResult> GetChild([ParameterAttribute(DbType="NVarChar(50)")] string classId, [ParameterAttribute(DbType="NVarChar(50)")] string companyid)
		{
			return this.CreateMethodCallQuery<GetChildResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classId, companyid);
		}
		
		[FunctionAttribute(Name="dbo.ClassChildren")]
		public ISingleResult<ClassChildrenResult> ClassChildren([ParameterAttribute(DbType="NVarChar(50)")] string classId, [ParameterAttribute(DbType="NVarChar(50)")] string company)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classId, company);
			return ((ISingleResult<ClassChildrenResult>)(result.ReturnValue));
		}
		
		[FunctionAttribute(Name="dbo.ClassChild")]
		public ISingleResult<ClassChildResult> ClassChild([ParameterAttribute(DbType="NVarChar(50)")] string classId, [ParameterAttribute(DbType="NVarChar(50)")] string company)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classId, company);
			return ((ISingleResult<ClassChildResult>)(result.ReturnValue));
		}
		
		[FunctionAttribute(Name="dbo.AccountBalance")]
		public ISingleResult<AccountBalanceResult> AccountBalance([ParameterAttribute(Name="class", DbType="NVarChar(50)")] string @class, [ParameterAttribute(DbType="NVarChar(6)")] string start, [ParameterAttribute(DbType="NVarChar(6)")] string end, [ParameterAttribute(DbType="NVarChar(6)")] string companyid, [ParameterAttribute(DbType="Bit")] System.Nullable<bool> isBalance)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), @class, start, end, companyid, isBalance);
			return ((ISingleResult<AccountBalanceResult>)(result.ReturnValue));
		}
		
		[FunctionAttribute(Name="dbo.SetJournal")]
		public int SetJournal([ParameterAttribute(DbType="Int")] System.Nullable<int> transid, [ParameterAttribute(DbType="NVarChar(50)")] string companyid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), transid, companyid);
			return ((int)(result.ReturnValue));
		}
		
		[FunctionAttribute(Name="dbo.GetJournal")]
		public ISingleResult<GetJournalResult> GetJournal([ParameterAttribute(DbType="NVarChar(6)")] string start, [ParameterAttribute(DbType="NVarChar(6)")] string end, [ParameterAttribute(DbType="NVarChar(5)")] string uiculture, [ParameterAttribute(Name="Companyid", DbType="NVarChar(6)")] string companyid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), start, end, uiculture, companyid);
			return ((ISingleResult<GetJournalResult>)(result.ReturnValue));
		}
	}
	
	[TableAttribute(Name="dbo.DepreciationDetail")]
	public partial class DepreciationDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TransId;
		
		private string _Period;
		
		private decimal _Depreciation;
		
		private decimal _Accumulated;
		
		private decimal _BookValue;
		
		private decimal _Percentage;
		
		private string _Currency;
		
		private System.Nullable<bool> _IsValidated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTransIdChanging(string value);
    partial void OnTransIdChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    partial void OnDepreciationChanging(decimal value);
    partial void OnDepreciationChanged();
    partial void OnAccumulatedChanging(decimal value);
    partial void OnAccumulatedChanged();
    partial void OnBookValueChanging(decimal value);
    partial void OnBookValueChanged();
    partial void OnPercentageChanging(decimal value);
    partial void OnPercentageChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnIsValidatedChanging(System.Nullable<bool> value);
    partial void OnIsValidatedChanged();
    #endregion
		
		public DepreciationDetail()
		{
			OnCreated();
		}
		
		[ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[ColumnAttribute(Storage="_TransId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TransId
		{
			get
			{
				return this._TransId;
			}
			set
			{
				if ((this._TransId != value))
				{
					this.OnTransIdChanging(value);
					this.SendPropertyChanging();
					this._TransId = value;
					this.SendPropertyChanged("TransId");
					this.OnTransIdChanged();
				}
			}
		}
		
		[ColumnAttribute(Storage="_Period", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[ColumnAttribute(Storage="_Depreciation", DbType="Money NOT NULL")]
		public decimal Depreciation
		{
			get
			{
				return this._Depreciation;
			}
			set
			{
				if ((this._Depreciation != value))
				{
					this.OnDepreciationChanging(value);
					this.SendPropertyChanging();
					this._Depreciation = value;
					this.SendPropertyChanged("Depreciation");
					this.OnDepreciationChanged();
				}
			}
		}
		
		[ColumnAttribute(Storage="_Accumulated", DbType="Money NOT NULL")]
		public decimal Accumulated
		{
			get
			{
				return this._Accumulated;
			}
			set
			{
				if ((this._Accumulated != value))
				{
					this.OnAccumulatedChanging(value);
					this.SendPropertyChanging();
					this._Accumulated = value;
					this.SendPropertyChanged("Accumulated");
					this.OnAccumulatedChanged();
				}
			}
		}
		
		[ColumnAttribute(Storage="_BookValue", DbType="Money NOT NULL")]
		public decimal BookValue
		{
			get
			{
				return this._BookValue;
			}
			set
			{
				if ((this._BookValue != value))
				{
					this.OnBookValueChanging(value);
					this.SendPropertyChanging();
					this._BookValue = value;
					this.SendPropertyChanged("BookValue");
					this.OnBookValueChanged();
				}
			}
		}
		
		[ColumnAttribute(Storage="_Percentage", DbType="Money NOT NULL")]
		public decimal Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[ColumnAttribute(Storage="_Currency", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[ColumnAttribute(Storage="_IsValidated", DbType="Bit")]
		public System.Nullable<bool> IsValidated
		{
			get
			{
				return this._IsValidated;
			}
			set
			{
				if ((this._IsValidated != value))
				{
					this.OnIsValidatedChanging(value);
					this.SendPropertyChanging();
					this._IsValidated = value;
					this.SendPropertyChanged("IsValidated");
					this.OnIsValidatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class account1To7Result
	{
		
		private int _gr;
		
		private string _ID;
		
		private string _AccountId;
		
		private string _Name;
		
		private System.Nullable<decimal> _TDebit;
		
		private System.Nullable<decimal> _TCredit;
		
		private System.Nullable<decimal> _SDebit;
		
		private System.Nullable<decimal> _SCredit;
		
		private string _Currency;
		
		public account1To7Result()
		{
		}
		
		[ColumnAttribute(Storage="_gr", DbType="Int NOT NULL")]
		public int gr
		{
			get
			{
				return this._gr;
			}
			set
			{
				if ((this._gr != value))
				{
					this._gr = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_ID", DbType="NVarChar(1)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_AccountId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_TDebit", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> TDebit
		{
			get
			{
				return this._TDebit;
			}
			set
			{
				if ((this._TDebit != value))
				{
					this._TDebit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_TCredit", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> TCredit
		{
			get
			{
				return this._TCredit;
			}
			set
			{
				if ((this._TCredit != value))
				{
					this._TCredit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SDebit", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> SDebit
		{
			get
			{
				return this._SDebit;
			}
			set
			{
				if ((this._SDebit != value))
				{
					this._SDebit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SCredit", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> SCredit
		{
			get
			{
				return this._SCredit;
			}
			set
			{
				if ((this._SCredit != value))
				{
					this._SCredit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Currency", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
	}
	
	public partial class ClassAccountBalanceResult
	{
		
		private string _ID;
		
		private string _AccountId;
		
		private string _Name;
		
		private System.Nullable<decimal> _TDebit;
		
		private System.Nullable<decimal> _TCredit;
		
		private System.Nullable<decimal> _SDebit;
		
		private System.Nullable<decimal> _SCredit;
		
		private string _Currency;
		
		public ClassAccountBalanceResult()
		{
		}
		
		[ColumnAttribute(Storage="_ID", DbType="NVarChar(1)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_AccountId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_TDebit", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> TDebit
		{
			get
			{
				return this._TDebit;
			}
			set
			{
				if ((this._TDebit != value))
				{
					this._TDebit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_TCredit", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> TCredit
		{
			get
			{
				return this._TCredit;
			}
			set
			{
				if ((this._TCredit != value))
				{
					this._TCredit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SDebit", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> SDebit
		{
			get
			{
				return this._SDebit;
			}
			set
			{
				if ((this._SDebit != value))
				{
					this._SDebit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SCredit", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> SCredit
		{
			get
			{
				return this._SCredit;
			}
			set
			{
				if ((this._SCredit != value))
				{
					this._SCredit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Currency", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
	}
	
	public partial class ClassAccountBalancesResult
	{
		
		private int _ID;
		
		private string _ClassId;
		
		private string _ClassName;
		
		private string _SubClassId;
		
		private string _SubClassName;
		
		private string _AccountId;
		
		private string _AccountName;
		
		private System.Nullable<decimal> _TDebit;
		
		private System.Nullable<decimal> _TCredit;
		
		private System.Nullable<decimal> _SDebit;
		
		private System.Nullable<decimal> _SCredit;
		
		private string _Currency;
		
		private System.Nullable<decimal> _Balance;
		
		private string _CompanyId;
		
		private System.Nullable<bool> _IsBalance;
		
		public ClassAccountBalancesResult()
		{
		}
		
		[ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_ClassId", DbType="NVarChar(50)")]
		public string ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this._ClassId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_ClassName", DbType="NVarChar(150)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SubClassId", DbType="NVarChar(50)")]
		public string SubClassId
		{
			get
			{
				return this._SubClassId;
			}
			set
			{
				if ((this._SubClassId != value))
				{
					this._SubClassId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SubClassName", DbType="NVarChar(150)")]
		public string SubClassName
		{
			get
			{
				return this._SubClassName;
			}
			set
			{
				if ((this._SubClassName != value))
				{
					this._SubClassName = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_AccountId", DbType="NVarChar(50)")]
		public string AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_AccountName", DbType="NVarChar(150)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_TDebit", DbType="Money")]
		public System.Nullable<decimal> TDebit
		{
			get
			{
				return this._TDebit;
			}
			set
			{
				if ((this._TDebit != value))
				{
					this._TDebit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_TCredit", DbType="Money")]
		public System.Nullable<decimal> TCredit
		{
			get
			{
				return this._TCredit;
			}
			set
			{
				if ((this._TCredit != value))
				{
					this._TCredit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SDebit", DbType="Money")]
		public System.Nullable<decimal> SDebit
		{
			get
			{
				return this._SDebit;
			}
			set
			{
				if ((this._SDebit != value))
				{
					this._SDebit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SCredit", DbType="Money")]
		public System.Nullable<decimal> SCredit
		{
			get
			{
				return this._SCredit;
			}
			set
			{
				if ((this._SCredit != value))
				{
					this._SCredit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Currency", DbType="NVarChar(50)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Balance", DbType="Money")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_CompanyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_IsBalance", DbType="Bit")]
		public System.Nullable<bool> IsBalance
		{
			get
			{
				return this._IsBalance;
			}
			set
			{
				if ((this._IsBalance != value))
				{
					this._IsBalance = value;
				}
			}
		}
	}
	
	public partial class GetAccountBalanceResult
	{
		
		private string _AccountId;
		
		private string _Name;
		
		private decimal _Debit;
		
		private decimal _Credit;
		
		private string _Currency;
		
		public GetAccountBalanceResult()
		{
		}
		
		[ColumnAttribute(Storage="_AccountId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Debit", DbType="Decimal(18,2) NOT NULL")]
		public decimal Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this._Debit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Credit", DbType="Decimal(18,2) NOT NULL")]
		public decimal Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this._Credit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Currency", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
	}
	
	public partial class GetAccountBalancesResult
	{
		
		private string _AccountId;
		
		private string _Name;
		
		private System.Nullable<decimal> _TDebit;
		
		private System.Nullable<decimal> _TCredit;
		
		private System.Nullable<decimal> _SDebit;
		
		private System.Nullable<decimal> _SCredit;
		
		private string _Currency;
		
		public GetAccountBalancesResult()
		{
		}
		
		[ColumnAttribute(Storage="_AccountId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_TDebit", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> TDebit
		{
			get
			{
				return this._TDebit;
			}
			set
			{
				if ((this._TDebit != value))
				{
					this._TDebit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_TCredit", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> TCredit
		{
			get
			{
				return this._TCredit;
			}
			set
			{
				if ((this._TCredit != value))
				{
					this._TCredit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SDebit", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> SDebit
		{
			get
			{
				return this._SDebit;
			}
			set
			{
				if ((this._SDebit != value))
				{
					this._SDebit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SCredit", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> SCredit
		{
			get
			{
				return this._SCredit;
			}
			set
			{
				if ((this._SCredit != value))
				{
					this._SCredit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Currency", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
	}
	
	public partial class GetBalanceSheetChildrenResult
	{
		
		private string _id;
		
		private string _name;
		
		public GetBalanceSheetChildrenResult()
		{
		}
		
		[ColumnAttribute(Storage="_id", DbType="NVarChar(50)")]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_name", DbType="NVarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
	
	public partial class GetChildrenResult
	{
		
		private string _id;
		
		public GetChildrenResult()
		{
		}
		
		[ColumnAttribute(Storage="_id", DbType="NVarChar(50)")]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	public partial class GetParentsResult
	{
		
		private string _id;
		
		private string _name;
		
		public GetParentsResult()
		{
		}
		
		[ColumnAttribute(Storage="_id", DbType="NVarChar(50)")]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_name", DbType="NVarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
	
	public partial class GetFiscalYearsResult
	{
		
		private string _CompanyId;
		
		private string _CStart;
		
		private string _CEnd;
		
		private string _OStart;
		
		private string _OEnd;
		
		public GetFiscalYearsResult()
		{
		}
		
		[ColumnAttribute(Storage="_CompanyId", DbType="NVarChar(50)")]
		public string CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_CStart", DbType="NChar(6)")]
		public string CStart
		{
			get
			{
				return this._CStart;
			}
			set
			{
				if ((this._CStart != value))
				{
					this._CStart = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_CEnd", DbType="NChar(6)")]
		public string CEnd
		{
			get
			{
				return this._CEnd;
			}
			set
			{
				if ((this._CEnd != value))
				{
					this._CEnd = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_OStart", DbType="NChar(6)")]
		public string OStart
		{
			get
			{
				return this._OStart;
			}
			set
			{
				if ((this._OStart != value))
				{
					this._OStart = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_OEnd", DbType="NChar(6)")]
		public string OEnd
		{
			get
			{
				return this._OEnd;
			}
			set
			{
				if ((this._OEnd != value))
				{
					this._OEnd = value;
				}
			}
		}
	}
	
	public partial class CloseFiscalYearResult
	{
		
		private int _Id;
		
		private string _Name;
		
		private string _AccountId;
		
		private string _Periode;
		
		private decimal _Debit;
		
		private decimal _Credit;
		
		private string _CompanyID;
		
		private string _Currency;
		
		private decimal _InitialBalance;
		
		private decimal _FinalBalance;
		
		private string _oYear;
		
		private string _oMonth;
		
		public CloseFiscalYearResult()
		{
		}
		
		[ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_AccountId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Periode", DbType="NChar(6) NOT NULL", CanBeNull=false)]
		public string Periode
		{
			get
			{
				return this._Periode;
			}
			set
			{
				if ((this._Periode != value))
				{
					this._Periode = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Debit", DbType="Decimal(18,2) NOT NULL")]
		public decimal Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this._Debit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Credit", DbType="Decimal(18,2) NOT NULL")]
		public decimal Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this._Credit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_CompanyID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Currency", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_InitialBalance", DbType="Decimal(18,2) NOT NULL")]
		public decimal InitialBalance
		{
			get
			{
				return this._InitialBalance;
			}
			set
			{
				if ((this._InitialBalance != value))
				{
					this._InitialBalance = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_FinalBalance", DbType="Decimal(18,2) NOT NULL")]
		public decimal FinalBalance
		{
			get
			{
				return this._FinalBalance;
			}
			set
			{
				if ((this._FinalBalance != value))
				{
					this._FinalBalance = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_oYear", DbType="Char(4)")]
		public string oYear
		{
			get
			{
				return this._oYear;
			}
			set
			{
				if ((this._oYear != value))
				{
					this._oYear = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_oMonth", DbType="Char(2)")]
		public string oMonth
		{
			get
			{
				return this._oMonth;
			}
			set
			{
				if ((this._oMonth != value))
				{
					this._oMonth = value;
				}
			}
		}
	}
	
	public partial class GetBrouillardResult
	{
		
		private int _Id;
		
		private System.DateTime _Period;
		
		private string _NumPiece;
		
		private string _AccountID;
		
		private System.Nullable<bool> _Side;
		
		private string _OAccountID;
		
		private string _Owner;
		
		private string _HeaderText;
		
		private System.Nullable<decimal> _Amount;
		
		private string _Currency;
		
		private string _TypeDoc;
		
		private string _CompanyId;
		
		private System.Nullable<bool> _IsValidated;
		
		public GetBrouillardResult()
		{
		}
		
		[ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Period", DbType="DateTime NOT NULL")]
		public System.DateTime Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this._Period = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_NumPiece", DbType="NVarChar(10)")]
		public string NumPiece
		{
			get
			{
				return this._NumPiece;
			}
			set
			{
				if ((this._NumPiece != value))
				{
					this._NumPiece = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_AccountID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Side", DbType="Bit")]
		public System.Nullable<bool> Side
		{
			get
			{
				return this._Side;
			}
			set
			{
				if ((this._Side != value))
				{
					this._Side = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_OAccountID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OAccountID
		{
			get
			{
				return this._OAccountID;
			}
			set
			{
				if ((this._OAccountID != value))
				{
					this._OAccountID = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Owner", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this._Owner = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_HeaderText", DbType="NVarChar(306) NOT NULL", CanBeNull=false)]
		public string HeaderText
		{
			get
			{
				return this._HeaderText;
			}
			set
			{
				if ((this._HeaderText != value))
				{
					this._HeaderText = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Currency", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_TypeDoc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeDoc
		{
			get
			{
				return this._TypeDoc;
			}
			set
			{
				if ((this._TypeDoc != value))
				{
					this._TypeDoc = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_CompanyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_IsValidated", DbType="Bit")]
		public System.Nullable<bool> IsValidated
		{
			get
			{
				return this._IsValidated;
			}
			set
			{
				if ((this._IsValidated != value))
				{
					this._IsValidated = value;
				}
			}
		}
	}
	
	public partial class PeriodicBalancesResult
	{
		
		private int _Id;
		
		private string _AccountId;
		
		private string _AccountName;
		
		private string _Periode;
		
		private string _OYear;
		
		private string _OMonth;
		
		private System.Nullable<decimal> _Debit;
		
		private System.Nullable<decimal> _Credit;
		
		private System.Nullable<decimal> _InitialBalance;
		
		private System.Nullable<decimal> _FinalBalance;
		
		private System.Nullable<decimal> _Balance;
		
		private System.Nullable<decimal> _SDebit;
		
		private System.Nullable<decimal> _SCredit;
		
		private string _Currency;
		
		private System.Nullable<bool> _IsBalance;
		
		private string _CompanyId;
		
		public PeriodicBalancesResult()
		{
		}
		
		[ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_AccountId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_AccountName", DbType="NVarChar(150)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Periode", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string Periode
		{
			get
			{
				return this._Periode;
			}
			set
			{
				if ((this._Periode != value))
				{
					this._Periode = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_OYear", DbType="NVarChar(4)")]
		public string OYear
		{
			get
			{
				return this._OYear;
			}
			set
			{
				if ((this._OYear != value))
				{
					this._OYear = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_OMonth", DbType="NVarChar(2)")]
		public string OMonth
		{
			get
			{
				return this._OMonth;
			}
			set
			{
				if ((this._OMonth != value))
				{
					this._OMonth = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Debit", DbType="Money")]
		public System.Nullable<decimal> Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this._Debit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Credit", DbType="Money")]
		public System.Nullable<decimal> Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this._Credit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_InitialBalance", DbType="Money")]
		public System.Nullable<decimal> InitialBalance
		{
			get
			{
				return this._InitialBalance;
			}
			set
			{
				if ((this._InitialBalance != value))
				{
					this._InitialBalance = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_FinalBalance", DbType="Money")]
		public System.Nullable<decimal> FinalBalance
		{
			get
			{
				return this._FinalBalance;
			}
			set
			{
				if ((this._FinalBalance != value))
				{
					this._FinalBalance = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Balance", DbType="Money")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SDebit", DbType="Money")]
		public System.Nullable<decimal> SDebit
		{
			get
			{
				return this._SDebit;
			}
			set
			{
				if ((this._SDebit != value))
				{
					this._SDebit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SCredit", DbType="Money")]
		public System.Nullable<decimal> SCredit
		{
			get
			{
				return this._SCredit;
			}
			set
			{
				if ((this._SCredit != value))
				{
					this._SCredit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Currency", DbType="NVarChar(50)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_IsBalance", DbType="Bit")]
		public System.Nullable<bool> IsBalance
		{
			get
			{
				return this._IsBalance;
			}
			set
			{
				if ((this._IsBalance != value))
				{
					this._IsBalance = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_CompanyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
	}
	
	public partial class GetChildResult
	{
		
		private string _ChildId;
		
		private string _ChildName;
		
		private string _ParentId;
		
		private string _ParentName;
		
		public GetChildResult()
		{
		}
		
		[ColumnAttribute(Storage="_ChildId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChildId
		{
			get
			{
				return this._ChildId;
			}
			set
			{
				if ((this._ChildId != value))
				{
					this._ChildId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_ChildName", DbType="NVarChar(255)")]
		public string ChildName
		{
			get
			{
				return this._ChildName;
			}
			set
			{
				if ((this._ChildName != value))
				{
					this._ChildName = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_ParentId", DbType="NVarChar(50)")]
		public string ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_ParentName", DbType="NVarChar(255)")]
		public string ParentName
		{
			get
			{
				return this._ParentName;
			}
			set
			{
				if ((this._ParentName != value))
				{
					this._ParentName = value;
				}
			}
		}
	}
	
	public partial class ClassChildrenResult
	{
		
		private string _id;
		
		private string _name;
		
		public ClassChildrenResult()
		{
		}
		
		[ColumnAttribute(Storage="_id", DbType="NVarChar(50)")]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_name", DbType="NVarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
	
	public partial class ClassChildResult
	{
		
		private string _ChildId;
		
		private string _ChildName;
		
		private string _ParentId;
		
		private string _ParentName;
		
		public ClassChildResult()
		{
		}
		
		[ColumnAttribute(Storage="_ChildId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChildId
		{
			get
			{
				return this._ChildId;
			}
			set
			{
				if ((this._ChildId != value))
				{
					this._ChildId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_ChildName", DbType="NVarChar(255)")]
		public string ChildName
		{
			get
			{
				return this._ChildName;
			}
			set
			{
				if ((this._ChildName != value))
				{
					this._ChildName = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_ParentId", DbType="NVarChar(50)")]
		public string ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_ParentName", DbType="NVarChar(255)")]
		public string ParentName
		{
			get
			{
				return this._ParentName;
			}
			set
			{
				if ((this._ParentName != value))
				{
					this._ParentName = value;
				}
			}
		}
	}
	
	public partial class AccountBalanceResult
	{
		
		private int _ID;
		
		private string _ClassId;
		
		private string _ClassName;
		
		private string _SubClassId;
		
		private string _SubClassName;
		
		private string _AccountId;
		
		private string _AccountName;
		
		private System.Nullable<decimal> _TDebit;
		
		private System.Nullable<decimal> _TCredit;
		
		private System.Nullable<decimal> _SDebit;
		
		private System.Nullable<decimal> _SCredit;
		
		private string _Currency;
		
		private System.Nullable<decimal> _Balance;
		
		private string _CompanyId;
		
		private System.Nullable<bool> _IsBalance;
		
		private System.Nullable<bool> _IsResult;
		
		public AccountBalanceResult()
		{
		}
		
		[ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_ClassId", DbType="NVarChar(50)")]
		public string ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this._ClassId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_ClassName", DbType="NVarChar(150)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SubClassId", DbType="NVarChar(50)")]
		public string SubClassId
		{
			get
			{
				return this._SubClassId;
			}
			set
			{
				if ((this._SubClassId != value))
				{
					this._SubClassId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SubClassName", DbType="NVarChar(150)")]
		public string SubClassName
		{
			get
			{
				return this._SubClassName;
			}
			set
			{
				if ((this._SubClassName != value))
				{
					this._SubClassName = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_AccountId", DbType="NVarChar(50)")]
		public string AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_AccountName", DbType="NVarChar(150)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_TDebit", DbType="Money")]
		public System.Nullable<decimal> TDebit
		{
			get
			{
				return this._TDebit;
			}
			set
			{
				if ((this._TDebit != value))
				{
					this._TDebit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_TCredit", DbType="Money")]
		public System.Nullable<decimal> TCredit
		{
			get
			{
				return this._TCredit;
			}
			set
			{
				if ((this._TCredit != value))
				{
					this._TCredit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SDebit", DbType="Money")]
		public System.Nullable<decimal> SDebit
		{
			get
			{
				return this._SDebit;
			}
			set
			{
				if ((this._SDebit != value))
				{
					this._SDebit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_SCredit", DbType="Money")]
		public System.Nullable<decimal> SCredit
		{
			get
			{
				return this._SCredit;
			}
			set
			{
				if ((this._SCredit != value))
				{
					this._SCredit = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Currency", DbType="NVarChar(50)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Balance", DbType="Money")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_CompanyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_IsBalance", DbType="Bit")]
		public System.Nullable<bool> IsBalance
		{
			get
			{
				return this._IsBalance;
			}
			set
			{
				if ((this._IsBalance != value))
				{
					this._IsBalance = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_IsResult", DbType="Bit")]
		public System.Nullable<bool> IsResult
		{
			get
			{
				return this._IsResult;
			}
			set
			{
				if ((this._IsResult != value))
				{
					this._IsResult = value;
				}
			}
		}
	}
	
	public partial class GetJournalResult
	{
		
		private int _ID;
		
		private int _ItemID;
		
		private int _OID;
		
		private string _LocalName;
		
		private string _CustSupplierID;
		
		private System.DateTime _TransDate;
		
		private string _Periode;
		
		private string _OYear;
		
		private string _oMonth;
		
		private string _Account;
		
		private string _AccountName;
		
		private string _OAccount;
		
		private string _OAccountName;
		
		private decimal _Amount;
		
		private string _Side;
		
		private string _Currency;
		
		private string _CompanyID;
		
		private string _Owner;
		
		private string _TypeJournal;
		
		public GetJournalResult()
		{
		}
		
		[ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_OID", DbType="Int NOT NULL")]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this._OID = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_LocalName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LocalName
		{
			get
			{
				return this._LocalName;
			}
			set
			{
				if ((this._LocalName != value))
				{
					this._LocalName = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_CustSupplierID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustSupplierID
		{
			get
			{
				return this._CustSupplierID;
			}
			set
			{
				if ((this._CustSupplierID != value))
				{
					this._CustSupplierID = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_TransDate", DbType="DateTime NOT NULL")]
		public System.DateTime TransDate
		{
			get
			{
				return this._TransDate;
			}
			set
			{
				if ((this._TransDate != value))
				{
					this._TransDate = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Periode", DbType="NChar(6) NOT NULL", CanBeNull=false)]
		public string Periode
		{
			get
			{
				return this._Periode;
			}
			set
			{
				if ((this._Periode != value))
				{
					this._Periode = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_OYear", DbType="Char(4)")]
		public string OYear
		{
			get
			{
				return this._OYear;
			}
			set
			{
				if ((this._OYear != value))
				{
					this._OYear = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_oMonth", DbType="Char(2)")]
		public string oMonth
		{
			get
			{
				return this._oMonth;
			}
			set
			{
				if ((this._oMonth != value))
				{
					this._oMonth = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Account", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this._Account = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_AccountName", DbType="NVarChar(150)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_OAccount", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OAccount
		{
			get
			{
				return this._OAccount;
			}
			set
			{
				if ((this._OAccount != value))
				{
					this._OAccount = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_OAccountName", DbType="NVarChar(150)")]
		public string OAccountName
		{
			get
			{
				return this._OAccountName;
			}
			set
			{
				if ((this._OAccountName != value))
				{
					this._OAccountName = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Side", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string Side
		{
			get
			{
				return this._Side;
			}
			set
			{
				if ((this._Side != value))
				{
					this._Side = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Currency", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_CompanyID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_Owner", DbType="NVarChar(150)")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this._Owner = value;
				}
			}
		}
		
		[ColumnAttribute(Storage="_TypeJournal", DbType="VarChar(50)")]
		public string TypeJournal
		{
			get
			{
				return this._TypeJournal;
			}
			set
			{
				if ((this._TypeJournal != value))
				{
					this._TypeJournal = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
