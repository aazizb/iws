@using IWSProject.Content

<script type="text/javascript">
    var currentModelId = null;
    function OnMBeginCallback(s, e) {
        if (currentModelId !== null) {
            e.customArgs["currentModelId"] = currentModelId;
            currentModelId = null;
        }
    }
    function OnModelIdSelectionChanged() {
        currentModelId = ComboBoxModelId.GetValue();
        if (!callbackPanelPartialView.InCallback()) {
            callbackPanelPartialView.PerformCallback();
        }
    }
    function OnMEndCallback(s, e) {
        if (currentModelId !== null) {
            callbackPanelPartialView.PerformCallback();
        }
    }
    function OnSubmitClick(s, e) {
        currentModelId = ComboBoxModelId.GetValue();
        callbackPanelPartialView.PerformCallback();
    }
    function OnButtonClick() {
        if (PdfUpdateGridView.IsCustomizationWindowVisible()) {

            PdfUpdateGridView.HideCustomizationWindow();
        }
        else {
            PdfUpdateGridView.ShowCustomizationWindow();
        }
        UpdateButtonText();
    }
    function CustomizationWindowCloseUp(s, e) {
        UpdateButtonText();
    }
    function UpdateButtonText() {
        var text = PdfUpdateGridView.IsCustomizationWindowVisible() ? "Hide" : "Show";
        btShowCustomizationWindow.SetText(text);
    }
    function OnFileUploadComplete(s, e) {
        if (!e.callbackData) {
            alert("The selected file was not uploaded.");
        }
        PdfUpdateGridView.Refresh();
    }

    function ShowPopup(itemId) {
                $.ajax({
            url: '@Url.Action("UploadFile", "PdfUpdate")',
            type: "POST",
                    data: { documentId: itemId },
            error: function (xhr, textStatus, errorThrown) {
                alert('Request Status: ' + xhr.status + '; Status Text: ' + textStatus + '; Error: ' + errorThrown);
            }
        });
        popupControl.Show();
    }

    function ShowUpdatePdfPopup(s, e) {
                $.ajax({
            url: '@Url.Action("UpdatePdf", "PdfUpdate")',
            type: "POST",
                    data: { documentId: s.GetRowKey(e.visibleIndex) },
            error: function (xhr, textStatus, errorThrown) {
                alert('Request Status: ' + xhr.status + '; Status Text: ' + textStatus + '; Error: ' + errorThrown);
            }
        });
        updateControl.Show();
        updateControl.PerformCallback();
    }

</script>

@{
    ViewBag.Title = IWSLocalResource.HardCopy;
}
<div class="accountHeader">
    <h2>@ViewBag.Title</h2>
</div>
@using (Html.BeginForm("Index", "PdfUpdate"))
{

    @Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "FormLayout";
    settings.Width = Unit.Percentage(100);
    settings.Items.AddGroupItem(gsettings =>
    {
        gsettings.ColCount = 3;
        gsettings.Caption = IWSLocalResource.QueryDetail;

        gsettings.Items.Add(i =>
        {
            i.Caption = IWSLocalResource.Accounting;
            i.SetNestedContent(() =>
            {
                Html.RenderPartial("GridLookupPartial");
            });
        });
        gsettings.Items.Add(i =>
        {
            i.Caption = " ";
            i.Name = "btnSubmit";
            i.NestedExtension().Button(e =>
            {
                e.Name = "btnOk";
                e.Text = IWSLocalResource.Validate;
                e.ControlStyle.CssClass = "button";
                e.Width = Unit.Pixel(105);
                e.ClientSideEvents.Click = "OnSubmitClick";
                e.UseSubmitBehavior = false;
            });
        });
        gsettings.Items.Add(i =>
        {
            i.Caption = " ";
            i.SetNestedContent(() =>
            {
                Html.RenderPartial("ShowHideButtonPartialView");
            });
        });
    });
}).GetHtml()


    @Html.Partial("CallbackPanelPartialView")

    @Html.Partial("UpdatePdfPartial")

    @Html.DevExpress().PopupControl(popup => {
    popup.Name = "popupControl";
    popup.PopupHorizontalAlign = PopupHorizontalAlign.LeftSides;
    popup.PopupVerticalAlign = PopupVerticalAlign.Below;
    popup.HeaderText = IWSLocalResource.ChooseFile;
    popup.SetContent(() => {
        Html.RenderPartial("UploadControlPartial");
    });
}).GetHtml()


}
