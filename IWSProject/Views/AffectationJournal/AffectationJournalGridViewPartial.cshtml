@using IWSProject.Content
@using IWSProject.Models.Entities
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "AffectationJournalGridView";

        settings.CallbackRouteValues = new { Controller = "AffectationJournal", Action = "AffectationJournalGridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "AffectationJournal", Action = "AffectationJournalGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "AffectationJournal", Action = "AffectationJournalGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "AffectationJournal", Action = "AffectationJournalGridViewPartialDelete" };

        settings.ClientSideEvents.CustomizationWindowCloseUp = "CustomizationWindowCloseUp";

        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsContextMenu.Enabled = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.Width = Unit.Percentage(5);

        settings.SettingsBehavior.EnableCustomizationWindow = true;
        settings.SettingsBehavior.EnableRowHotTrack = true;
        settings.SettingsBehavior.AllowSelectByRowClick = false;
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsBehavior.ColumnMoveMode = GridColumnMoveMode.AmongSiblings;

        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;
        settings.SettingsResizing.Visualization = ResizingMode.Live;

        settings.Styles.RowHotTrack.Cursor = "pointer";
        settings.Styles.AlternatingRow.BackColor = System.Drawing.Color.AliceBlue;

        settings.ClientSideEvents.RowDblClick = "function(sender, e) { sender.StartEditRow(e.visibleIndex); }";

        //performance tuning
        settings.ClientSideEvents.Init = "function(s, e) { s.PerformCallback(); }";
        settings.ClientSideEvents.BeginCallback = "function(s, e) { OnStartCallback(s, e); }";
        settings.ClientSideEvents.EndCallback = "function(s, e) { OnEndCallback(s, e); }";

        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.SettingsCommandButton.NewButton.Image.IconID = IconID.ActionsAdditem16x16;
        settings.SettingsCommandButton.NewButton.Image.ToolTip = IWSLocalResource.btnAddNew;
        settings.SettingsCommandButton.NewButton.Text = " ";

        settings.SettingsCommandButton.EditButton.Image.IconID = IconID.ActionsEditname16x16;
        settings.SettingsCommandButton.EditButton.Image.ToolTip = IWSLocalResource.btnEdit;
        settings.SettingsCommandButton.EditButton.Text = " ";
        settings.CommandColumn.ShowEditButton = true;

        settings.SettingsCommandButton.DeleteButton.Image.IconID = IconID.ActionsDeletelist16x16;
        settings.SettingsCommandButton.DeleteButton.Image.ToolTip = IWSLocalResource.btnDelete;
        settings.SettingsCommandButton.DeleteButton.Text = " ";
        settings.CommandColumn.ShowDeleteButton = true;


        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["Side"] = true;
        };
        settings.CustomJSProperties = (s, e) =>
        {
            MVCxGridView g = (MVCxGridView)s;
            e.Properties["cpClientLayout"] = g.SaveClientLayout();
        };
        settings.ClientLayout = (s, e) =>
        {
            switch (e.LayoutMode)
            {
                case ClientLayoutMode.Loading:
                    if (Session["LayoutAj"] != null)
                    {
                        e.LayoutData = Session["LayoutAj"].ToString();
                    }
                    break;
                case ClientLayoutMode.Saving:
                    Session["LayoutAj"] = e.LayoutData;
                    break;
            }
        };
        settings.KeyFieldName = "AccountID;Side;OAccountID";
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRowMenu = true;


        settings.Width = Unit.Percentage(100);
        settings.Height = Unit.Percentage(100);

        settings.ControlStyle.Paddings.Padding = Unit.Pixel(10);
        settings.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
        settings.ControlStyle.BorderBottom.BorderWidth = Unit.Pixel(1);

        settings.SettingsPager.Visible = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;

        settings.SettingsPager.PageSize = 19;

        settings.Columns.Add(column =>
        {
            column.FieldName = "AccountID";
            column.Caption = IWSLocalResource.account;
            column.Width = Unit.Percentage(20);

            column.ColumnType = MVCxGridViewColumnType.ComboBox;//

            column.EditorProperties().ComboBox(combo =>
            {
                combo.TextField = "Name";
                combo.ValueField = "id";
                combo.ValueType = typeof(string);
                //combo.DataSource = ViewBag.ComboAccountId;
                combo.Columns.Add("id").Caption = IWSLocalResource.id;
                combo.Columns.Add("name").Caption = IWSLocalResource.item;
                combo.Width = Unit.Percentage(100);
                combo.TextFormatString = "{0}-{1}";

                combo.CallbackRouteValues = new { Controller = "AffectationJournal", Action = "AccountIdComboBox" };//
                combo.DropDownStyle = DropDownStyle.DropDown;//
                combo.CallbackPageSize = 15;//
                combo.BindList(ViewBag.ComboAccountId);//
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Side";
            column.Caption = IWSLocalResource.side;
            column.Width = Unit.Percentage(5);
            column.EditorProperties().CheckBox(checkBox =>
            {
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "OAccountID";
            column.Caption = IWSLocalResource.oaccount;
            column.Width = Unit.Percentage(20);
            column.EditorProperties().ComboBox(combo =>
            {
                combo.TextField = "Name";
                combo.ValueField = "id";
                combo.ValueType = typeof(string);
                combo.DataSource = ViewBag.ComboAccountId;
                combo.Columns.Add("id").Caption = IWSLocalResource.id;
                combo.Columns.Add("name").Caption = IWSLocalResource.item;
                combo.Width = Unit.Percentage(100);
                combo.TextFormatString = "{0}-{1}";
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "TypeJournalID";
            column.Caption = IWSLocalResource.TypeJournal;
            column.Width = Unit.Percentage(10);
            column.EditorProperties().ComboBox(combo =>
            {
                combo.TextField = "Name";
                combo.ValueField = "Id";
                combo.ValueType = typeof(string);
                combo.DataSource = ViewBag.TypeJournal;
                combo.Columns.Add("Id", IWSLocalResource.id, Unit.Percentage(20));
                combo.Columns.Add("Name", IWSLocalResource.TypeJournal, Unit.Percentage(80));
                combo.TextFormatString = "{0}-{1}";
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Description";
            column.Caption = IWSLocalResource.description;
            column.Width = Unit.Percentage(35);
        });

        #region Template Edit

        settings.SetEditFormTemplateContent(templateContent =>
        {

            Html.DevExpress().FormLayout(formLayoutSettings =>
            {
                formLayoutSettings.Name = "AffectationJournalViewEdit";
                formLayoutSettings.Width = Unit.Percentage(100);
                formLayoutSettings.ColCount = 3;
                formLayoutSettings.Items.AddEmptyItem();

                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "AccountID";
                    i.Caption = IWSLocalResource.account;
                    i.NestedExtension().ComboBox(s =>
                    {
                        s.TabIndex = 1;
                        s.Properties.TextField = "name";
                        s.Properties.ValueField = "id";
                        s.Properties.ValueType = typeof(string);
                        s.Properties.DataSource = ViewBag.ComboAccountId;
                        s.Properties.Columns.Add(a =>
                        {
                            a.FieldName = "id";
                            a.Caption = IWSLocalResource.id;
                            a.Width = Unit.Percentage(35);
                        });
                        s.Properties.Columns.Add(a =>
                        {
                            a.FieldName = "name";
                            a.Caption = IWSLocalResource.name;
                            a.Width = Unit.Percentage(65);
                        });
                        s.Properties.TextFormatString = "{0}-{1}";
                        s.Properties.CallbackPageSize = 15;
                        s.Properties.FilterMinLength = 2;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75);
                        s.Properties.ClientSideEvents.Init = "function(s, e) { s.Focus(); }";

                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Side";
                    i.Caption = IWSLocalResource.side;
                    i.NestedExtension().CheckBox(e =>
                    {
                        e.TabIndex = 2;
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "OAccountID";
                    i.Caption = IWSLocalResource.oaccount;
                    i.NestedExtension().ComboBox(s =>
                    {
                        s.TabIndex = 3;
                        s.Properties.TextField = "name";
                        s.Properties.ValueField = "id";
                        s.Properties.ValueType = typeof(string);
                        s.Properties.DataSource = ViewBag.ComboAccountId;
                        s.Properties.Columns.Add(a =>
                        {
                            a.FieldName = "id";
                            a.Caption = IWSLocalResource.id;
                            a.Width = Unit.Percentage(35);
                        });
                        s.Properties.Columns.Add(a =>
                        {
                            a.FieldName = "name";
                            a.Caption = IWSLocalResource.name;
                            a.Width = Unit.Percentage(65);
                        });
                        s.Properties.TextFormatString = "{0}-{1}";
                        s.Properties.CallbackPageSize = 15;
                        s.Properties.FilterMinLength = 2;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75);
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "TypeJournalID";
                    i.Caption = IWSLocalResource.TypeJournal;
                    i.NestedExtension().ComboBox(s =>
                    {
                        s.Properties.TextField = "Name";
                        s.Properties.ValueField = "Id";
                        s.Properties.ValueType = typeof(string);
                        s.Properties.DataSource = ViewBag.TypeJournal;
                        s.Properties.Columns.Add(a =>
                        {
                            a.FieldName = "Id";
                            a.Caption = IWSLocalResource.id;
                            a.Width = Unit.Percentage(15);
                        });
                        s.Properties.Columns.Add(a =>
                        {
                            a.FieldName = "Name";
                            a.Caption = IWSLocalResource.name;
                            a.Width = Unit.Percentage(85);
                        });
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.TextFormatString = "{0}-{1}";
                        s.ShowModelErrors = true;
                        s.TabIndex = 4;
                        s.Width = Unit.Percentage(75);
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Description";
                    i.Caption = IWSLocalResource.description;
                    i.Width = Unit.Percentage(75);
                    i.NestedExtension().Memo(s =>
                    {
                        s.TabIndex = 5;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75);
                        s.Height = Unit.Pixel(80);
                    });
                });

                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.ShowCaption = DefaultBoolean.False;
                    i.HorizontalAlign = FormLayoutHorizontalAlign.Center;
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().Button(
                b =>
                {
                    b.Name = "btnUpdate";
                    b.Text = "";
                    b.TabIndex = 6;
                    b.ToolTip = IWSLocalResource.btnUpdate;
                    b.Style[HtmlTextWriterStyle.MarginRight] = "5px";
                    b.Images.Image.IconID = IconID.ActionsApply16x16;
                    b.Width = Unit.Pixel(80);
                    b.ClientSideEvents.Click = "function(s, e){ AffectationJournalGridView.UpdateEdit(); }";
                }).Render();

                    Html.DevExpress().Button(
                b =>
                {
                    b.Name = "btnCancel";
                    b.Text = "";
                    b.TabIndex = 7;
                    b.ToolTip = IWSLocalResource.btnCancel;
                    b.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                    b.Images.Image.IconID = IconID.ActionsCancel16x16;
                    b.Width = Unit.Pixel(80);
                    b.ClientSideEvents.Click = "function(s, e){ AffectationJournalGridView.CancelEdit(); }";
                }).Render();
                });
            })
            .Bind(ViewData["affectationJournal"] ?? templateContent.DataItem)
            .Render();
        });

        #endregion


        settings.DataBinding = (sender, e) =>
        {
            ((MVCxGridView)sender).ForceDataRowType(typeof(AffectationJournal));
        };

    });
    if (ViewData["GenericError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["GenericError"]);
    }
}
@grid.Bind(Model).GetHtml()