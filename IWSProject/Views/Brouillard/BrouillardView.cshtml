@using IWSProject.Content
<script type="text/javascript">

    var selectedIDs = null;
    var expanded = false;
    var ndxMaster = 0;
    var ndxDetail = 0;
    function OnMRowClick(s, e) {
        expanded = true;
        ndxMaster = e.visibleIndex;
        s.StartEditRow(ndxMaster);
    }
    function OnMEndCallback(s, e) {
        if (expanded == true) {
            expanded = false;
            s.ExpandDetailRow(ndxMaster);
        }
        TrackLayout(s.cpClientLayout);
    }
    function OnMBeginCallback(s, e) {
        e.customArgs["selectedIDs"] = selectedIDs;
    }
    function OnMSelectionChanged(s, e) {
        s.GetSelectedFieldValues("Id;NumPiece;TypeDoc", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {
        selectedIDs = values.join(';');
    }
    function OnSubmitClick(s, e) {
        callbackPanelPartialView.PerformCallback();
    }
    function OnMInit(s, e) {
        TrackLayout(s.cpClientLayout);
        ASPxClientUtils.AttachEventToElement(
            s.GetMainElement(),
            "keydown",
            function (e) {
                switch (e.keyCode) {
                    case 13://ENTER
                        var isValidated = IsValidated.GetValue();
                        if (s.IsEditing()) {
                            if (isValidated == false) {
                                s.UpdateEdit();
                            }
                            else {
                                s.CancelEdit();
                            }
                        } k;
                    case 27://ESC
                        if (s.IsEditing()) {
                            s.CancelEdit();
                        }
                        break;
                    default:
                        break;
                }
            });

    }
    function TrackLayout(layout) {
        $("#LastLayout").text(layout)
    }
    function OnButtonClick() {
        if (Brouillard.IsCustomizationWindowVisible()) {

            Brouillard.HideCustomizationWindow();
        }
        else {
            Brouillard.ShowCustomizationWindow();
        }
        UpdateButtonText();
    }
    function CustomizationWindowCloseUp(s, e) {
        UpdateButtonText();
    }
    function UpdateButtonText() {
        var text = unpaid.IsCustomizationWindowVisible() ? "Hide" : "Show";
        btShowCustomizationWindow.SetText(text);
    }

</script>
@{
    ViewBag.Title = IWSLocalResource.Draft;
}
<div class="accountHeader">
    <h2>@ViewBag.Title</h2>
</div>
@using (Html.BeginForm("Index", "Cash"))
{

    @Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "FormLayout";
    settings.Width = Unit.Percentage(100);
    settings.Items.AddGroupItem(gsettings =>
    {
        gsettings.ColCount = 2;
        gsettings.Caption = IWSLocalResource.QueryDetail;

        gsettings.Items.Add(i =>
        {
            i.Caption = " ";
            i.Name = "btnSubmit";
            i.NestedExtension().Button(e =>
            {
                e.Name = "btnOk";
                e.Text = IWSLocalResource.Validate;
                e.ControlStyle.CssClass = "button";
                e.Width = Unit.Pixel(105);
                e.ClientSideEvents.Click = "OnSubmitClick";
                e.UseSubmitBehavior = false;
            });
        });
        gsettings.Items.Add(i =>
        {
            i.Caption = " ";
            i.SetNestedContent(() =>
            {
                Html.RenderPartial("ShowHideButtonPartialView");
            });
        });
    });
}).GetHtml()


    @*@Html.DevExpress().Button(
        settings =>
        {
            settings.Name = "btnSubmit";
            settings.ControlStyle.CssClass = "button";
            settings.Text = IWSLocalResource.Validate;
            settings.Width = Unit.Pixel(150);
            settings.UseSubmitBehavior = false;
            settings.ClientSideEvents.Click = "OnSubmitClick";
        }
        ).GetHtml()*@


    @Html.Partial("CallbackPanelPartialView")

}

