@using IWSProject.Content
@using IWSProject.Models
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "unpaid";
        settings.Width = Unit.Percentage(100);

        settings.CallbackRouteValues = new { Controller = "UnpaidBill", Action = "MasterGridViewPartial" };

        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
        settings.SettingsContextMenu.Enabled = true;

        settings.ClientSideEvents.CustomizationWindowCloseUp = "CustomizationWindowCloseUp";

        settings.ClientSideEvents.BeginCallback = "OnMBeginCallback";
        settings.ClientSideEvents.EndCallback = "OnMEndCallback";

        settings.SettingsBehavior.EnableCustomizationWindow = true;
        settings.SettingsBehavior.EnableRowHotTrack = true;
        settings.SettingsBehavior.AllowSelectByRowClick = false;
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsBehavior.ColumnMoveMode = GridColumnMoveMode.AmongSiblings;

        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;
        settings.SettingsResizing.Visualization = ResizingMode.Live;

        settings.Styles.RowHotTrack.Cursor = "pointer";
        settings.Styles.RowHotTrack.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");
        settings.Styles.AlternatingRow.Enabled = DefaultBoolean.True;
        settings.Styles.AlternatingRow.BackColor = System.Drawing.Color.WhiteSmoke;
        settings.Styles.SelectedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");
        settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");

        settings.ControlStyle.Paddings.Padding = Unit.Pixel(10);
        settings.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
        settings.ControlStyle.BorderBottom.BorderWidth = Unit.Pixel(1);

        settings.Settings.ShowFooter = true;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRowMenu = true;

        settings.SettingsPager.Visible = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;

        settings.SettingsPager.PageSize = 19;

        settings.Images.DetailCollapsedButton.IconID = IconID.ActionsAdd16x16;
        settings.Images.DetailExpandedButton.IconID = IconID.ActionsRemove16x16;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.Width = Unit.Percentage(3);

        settings.CustomJSProperties = (s, e) =>
        {
            MVCxGridView g = (MVCxGridView)s;
            e.Properties["cpClientLayout"] = g.SaveClientLayout();
        };
        settings.ClientLayout = (s, e) =>
        {
            switch (e.LayoutMode)
            {
                case ClientLayoutMode.Loading:
                    if (Session["UnpaidLayout"] != null)
                    {
                        e.LayoutData = Session["UnpaidLayout"].ToString();
                    }
                    break;
                case ClientLayoutMode.Saving:
                    Session["UnpaidLayout"] = e.LayoutData;
                    break;
            }
        };

        settings.KeyFieldName = "transid;account;oaccount";

        settings.Columns.Add(column =>
        {
            column.FieldName = "id";
            column.Caption = IWSLocalResource.oid;
            column.Width = Unit.Percentage(9);
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "transid";
            column.Caption = IWSLocalResource.transid;
            column.Width = Unit.Percentage(9);
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "account";
            column.Caption = IWSLocalResource.account;
            column.Width = Unit.Percentage(20);
            column.EditorProperties().ComboBox(combo =>
            {
                combo.TextField = "Name";
                combo.ValueField = "id";
                combo.Width = Unit.Percentage(100);
                combo.ValueType = typeof(string);
                combo.DataSource = IWSLookUp.GetAccounts();
                combo.Columns.Add("id", IWSLocalResource.id, Unit.Percentage(25));
                combo.Columns.Add("name", IWSLocalResource.account, Unit.Percentage(75));
                combo.TextFormatString = "{0}-{1}";
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "side";
            column.Caption = IWSLocalResource.side;
            column.Width = Unit.Percentage(5);
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "oaccount";
            column.Caption = IWSLocalResource.oaccount;
            column.Width = Unit.Percentage(20);
            column.EditorProperties().ComboBox(combo =>
            {
                combo.TextField = "Name";
                combo.ValueField = "id";
                combo.ValueType = typeof(string);
                combo.DataSource = IWSLookUp.GetAccounts();
                combo.Columns.Add("id", IWSLocalResource.id, Unit.Percentage(25));
                combo.Columns.Add("name", IWSLocalResource.oaccount, Unit.Percentage(75));
                combo.TextFormatString = "{0}-{1}";
            });
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "duedate";
            column.Caption = IWSLocalResource.duedate;
            column.Width = Unit.Percentage(5);
            column.EditorProperties().TextBox(textBox =>
            {
                textBox.DisplayFormatString = "yyyy-MM-dd";
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "text";
            column.Caption = IWSLocalResource.text;
            column.Width = Unit.Percentage(8);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "amount";
            column.Caption = IWSLocalResource.AmountBill;
            column.Width = Unit.Percentage(7);
            column.EditorProperties().TextBox(textBox =>
            {
                textBox.DisplayFormatString = "N";
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "paid";
            column.Caption = IWSLocalResource.AmountPaid;
            column.Width = Unit.Percentage(7);
            column.EditorProperties().TextBox(textBox =>
            {
                textBox.DisplayFormatString = "N";
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "topay";
            column.Caption = IWSLocalResource.AmountToPay;
            column.Width = Unit.Percentage(7);
            column.EditorProperties().TextBox(textBox =>
            {
                textBox.DisplayFormatString = "N";
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Currency";
            column.Caption = IWSLocalResource.Currency;
            column.Width = Unit.Percentage(6);
        });

        settings.CustomSummaryCalculate = (s, e) =>
        {
            ASPxSummaryItem item = ((ASPxSummaryItem)e.Item);

            if (item.FieldName != "Currency")
                return;

            if (e.IsTotalSummary)
            {
                e.TotalValue = e.GetValue("Currency");
            }
        };

        settings.SummaryDisplayText = (sender, e) =>
        {
            if (e.IsTotalSummary && e.Item.FieldName != "Currency")
            {
                e.Text = string.Format(IWSLocalResource.Total + ": {0:N}", e.Value);
            }
        };
        settings.Settings.ShowFooter = true;
        settings.Settings.ShowGroupPanel = true;
        settings.SettingsBehavior.AutoExpandAllGroups = true;
        settings.Settings.ShowGroupFooter = GridViewGroupFooterMode.VisibleAlways;
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "amount").ShowInGroupFooterColumn = "amount";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "paid").ShowInGroupFooterColumn = "paid";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "topay").ShowInGroupFooterColumn = "topay";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Custom, "Currency").ShowInGroupFooterColumn = "Currency";

    }).Bind(Model).GetHtml();
}