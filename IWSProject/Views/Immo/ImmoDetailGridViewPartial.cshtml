@using IWSProject.Content
@using IWSProject.Models.Entities

@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "ImmoDetailGridView";
        settings.Caption = IWSLocalResource.Depreciation;
        settings.SettingsDetail.MasterGridName = "ImmoGridViewPartial";

        settings.CallbackRouteValues = new { Controller = "Immo", Action = "ImmoDetailGridView", TransId = ViewBag.TransId };

        settings.CommandColumn.ShowSelectCheckbox = true;

        settings.SettingsEditing.Mode = GridViewEditingMode.EditForm;
        settings.SettingsContextMenu.Enabled = true;

        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsBehavior.EnableRowHotTrack = true;
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsBehavior.ColumnMoveMode = GridColumnMoveMode.AmongSiblings;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;
        settings.SettingsResizing.Visualization = ResizingMode.Live;

        settings.CommandColumn.Visible = false;

        settings.CommandColumn.Width = Unit.Percentage(5);

        settings.SettingsCommandButton.NewButton.Image.IconID = IconID.ActionsAdditem16x16;
        settings.SettingsCommandButton.NewButton.Image.ToolTip = IWSLocalResource.btnAddNew;
        settings.SettingsCommandButton.NewButton.Text = " ";
        settings.CommandColumn.ShowNewButtonInHeader = true;

        settings.SettingsCommandButton.EditButton.Image.IconID = IconID.ActionsEditname16x16;
        settings.SettingsCommandButton.EditButton.Image.ToolTip = IWSLocalResource.btnEdit;
        settings.SettingsCommandButton.EditButton.Text = " ";
        settings.CommandColumn.ShowEditButton = true;

        settings.SettingsCommandButton.DeleteButton.Image.IconID = IconID.ActionsDeletelist16x16;
        settings.SettingsCommandButton.DeleteButton.Image.ToolTip = IWSLocalResource.btnDelete;
        settings.SettingsCommandButton.DeleteButton.Text = " ";
        settings.CommandColumn.ShowDeleteButton = true;

        settings.KeyFieldName = "Id";

        settings.Width = Unit.Percentage(100);
        settings.ControlStyle.Paddings.Padding = Unit.Pixel(0);
        settings.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
        settings.ControlStyle.BorderBottom.BorderWidth = Unit.Pixel(1);

        settings.Styles.RowHotTrack.Cursor = "pointer";
        settings.Styles.RowHotTrack.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");
        settings.Styles.AlternatingRow.Enabled = DefaultBoolean.True;
        settings.Styles.AlternatingRow.BackColor = System.Drawing.Color.WhiteSmoke;
        settings.Styles.SelectedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");
        settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");
        settings.SettingsPager.Visible = true;

        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowFilterRowMenu = true;
        settings.SettingsBehavior.AllowSelectByRowClick = false;

        settings.Columns.Add(column =>
        {
            column.FieldName = "Period";
            column.Caption = IWSLocalResource.periode;
            column.Width = Unit.Percentage(10);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "StraightLineDepreciation";
            column.Caption = IWSLocalResource.StraghtLineDepreciation;
            column.Width = Unit.Percentage(25);
            column.PropertiesEdit.DisplayFormatString = "N";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "StraightLineBookValue";
            column.Caption = IWSLocalResource.StraightLineBookValue;
            column.Width = Unit.Percentage(25);
            column.PropertiesEdit.DisplayFormatString = "N";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Depreciation";
            column.Caption = IWSLocalResource.Depreciation + " " + IWSLocalResource.SumOfYears;
            column.Width = Unit.Percentage(25);
            column.PropertiesEdit.DisplayFormatString = "N";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Accumulated";
            column.Caption = IWSLocalResource.Accumulated + " " + IWSLocalResource.SumOfYears;
            column.Width = Unit.Percentage(25);
            column.PropertiesEdit.DisplayFormatString = "N";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "BookValue";
            column.Caption = IWSLocalResource.BookValue;
            column.Width = Unit.Percentage(25);
            column.PropertiesEdit.DisplayFormatString = "N";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Percentage";
            column.Caption = IWSLocalResource.Percentage;
            column.Width = Unit.Percentage(15);
            column.PropertiesEdit.DisplayFormatString= "{0:n2}%";
        });
        settings.DataBinding = (sender, e) =>
        {
            ((MVCxGridView)sender).ForceDataRowType(typeof(DepreciationDetail));
        };
    });

    if (ViewData["GenericError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["GenericError"]);
    }
}
@grid.Bind(Model).GetHtml()
