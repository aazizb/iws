@using IWSProject.Content
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "ImmoGridView";

        settings.CallbackRouteValues = new
        {
            Controller = "Immo",
            Action = "ImmoGridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Immo", Action = "ImmoGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Immo", Action = "ImmoGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Immo", Action = "ImmoGridViewPartialDelete" };

        settings.ClientSideEvents.CustomizationWindowCloseUp = "CustomizationWindowCloseUp";

        settings.SettingsEditing.Mode = GridViewEditingMode.EditForm;
        settings.SettingsContextMenu.Enabled = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.Width = Unit.Percentage(5);

        settings.SettingsBehavior.EnableCustomizationWindow = true;
        settings.SettingsBehavior.EnableRowHotTrack = true;
        settings.SettingsBehavior.AllowSelectByRowClick = false;
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsBehavior.ColumnMoveMode = GridColumnMoveMode.AmongSiblings;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;
        settings.SettingsResizing.Visualization = ResizingMode.Live;

        settings.ClientSideEvents.RowClick = "function(sender, e) { sender.StartEditRow(e.visibleIndex); }";

        //performance tuning
        settings.ClientSideEvents.Init = "function(s, e) { s.PerformCallback(); }";
        settings.ClientSideEvents.BeginCallback = "function(s, e) { OnStartCallback(s, e); }";
        settings.ClientSideEvents.EndCallback = "function(s, e) { OnEndCallback(s, e); }";

        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.SettingsCommandButton.NewButton.Image.IconID = IconID.ActionsAdditem16x16;
        settings.SettingsCommandButton.NewButton.Image.ToolTip = IWSLocalResource.btnAddNew;
        settings.SettingsCommandButton.NewButton.Text = " ";

        settings.SettingsCommandButton.EditButton.Image.IconID = IconID.ActionsEditname16x16;
        settings.SettingsCommandButton.EditButton.Image.ToolTip = IWSLocalResource.btnEdit;
        settings.SettingsCommandButton.EditButton.Text = " ";
        settings.CommandColumn.ShowEditButton = true;

        settings.SettingsCommandButton.DeleteButton.Image.IconID = IconID.ActionsDeletelist16x16;
        settings.SettingsCommandButton.DeleteButton.Image.ToolTip = IWSLocalResource.btnDelete;
        settings.SettingsCommandButton.DeleteButton.Text = " ";
        settings.CommandColumn.ShowDeleteButton = true;

        settings.KeyFieldName = "Id";

        settings.CustomJSProperties = (s, e) =>
        {
            MVCxGridView g = (MVCxGridView)s;
            e.Properties["cpClientLayout"] = g.SaveClientLayout();
        };
        settings.ClientLayout = (s, e) =>
        {
            switch (e.LayoutMode)
            {
                case ClientLayoutMode.Loading:
                    if (Session["ImmoLayout"] != null)
                    {
                        e.LayoutData = Session["ImmoLayout"].ToString();
                    }
                    break;
                case ClientLayoutMode.Saving:
                    Session["ImmoLayout"] = e.LayoutData;
                    break;
            }
        };
        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["Posted"] = DateTime.Today;
            e.NewValues["Updated"] = DateTime.Today;
            e.NewValues["Started"] = DateTime.Today;
            e.NewValues["IsValidated"] = false;
            e.NewValues["ScrapValue"] = 0;
        };
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsBehavior.EnableRowHotTrack = true;
        settings.SettingsBehavior.AllowSelectByRowClick = false;
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsBehavior.ColumnMoveMode = GridColumnMoveMode.AmongSiblings;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;
        settings.SettingsResizing.Visualization = ResizingMode.Live;

        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRowMenu = true;

        settings.Width = Unit.Percentage(100);
        settings.ControlStyle.Paddings.Padding = Unit.Pixel(10);
        settings.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
        settings.ControlStyle.BorderBottom.BorderWidth = Unit.Pixel(1);

        settings.Styles.RowHotTrack.Cursor = "pointer";
        settings.Styles.RowHotTrack.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");
        settings.Styles.AlternatingRow.Enabled = DefaultBoolean.True;
        settings.Styles.AlternatingRow.BackColor = System.Drawing.Color.WhiteSmoke;
        settings.Styles.SelectedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");
        settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");

        settings.SettingsPager.Visible = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSize = 19;

        settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;
        settings.SettingsDetail.ShowDetailRow = true;

        settings.Images.DetailCollapsedButton.IconID = IconID.ActionsAdd16x16;
        settings.Images.DetailExpandedButton.IconID = IconID.ActionsRemove16x16;

        settings.Columns.Add(column =>
        {
            column.FieldName = "Id";
            column.Caption = IWSLocalResource.id;
            column.Width = Unit.Percentage(6);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Asset";
            column.Caption = IWSLocalResource.name;
            column.Width = Unit.Percentage(20);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "CostOfAsset";
            column.Caption = IWSLocalResource.CostOfAsset;
            column.Width = Unit.Percentage(10);
            column.EditorProperties().TextBox(p =>
            {
                p.DisplayFormatString = "N";
                p.DisplayFormatInEditMode = true;
                p.Width = Unit.Percentage(100);
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "ScrapValue";
            column.Caption = IWSLocalResource.ScrapValue;
            column.Width = Unit.Percentage(10);
            column.EditorProperties().TextBox(p =>
            {
                p.DisplayFormatString = "N";
                p.DisplayFormatInEditMode = true;
                p.Width = Unit.Percentage(100);
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Currency";
            column.Caption = IWSLocalResource.Currency;
            column.Width = Unit.Percentage(5);
            column.EditorProperties().ComboBox(combo =>
            {
                combo.TextField = "Name";
                combo.ValueField = "id";
                combo.ValueType = typeof(string);
                combo.DataSource = ViewBag.Currency;
                combo.Columns.Add("id", IWSLocalResource.id, Unit.Percentage(50));
                combo.Columns.Add("name", IWSLocalResource.Currency, Unit.Percentage(50));
                combo.TextFormatString = "{1}";
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "LifeSpan";
            column.Caption = IWSLocalResource.LifeSpan;
            column.Width = Unit.Percentage(10);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Started";
            column.Caption = IWSLocalResource.StartedDate;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.Width = Unit.Percentage(6);
            column.EditorProperties().DateEdit(d =>
            {
                d.EditFormatString = "MM/dd/yyyy";
                d.EditFormat = EditFormat.Custom;
                d.Width = Unit.Percentage(100);
                d.DisplayFormatString = "yyyy-MM-dd";
            });
        });

        //settings.Columns.Add(column =>
        //{
        //    column.FieldName = "Frequency";
        //    column.Caption = IWSLocalResource.Frequency;
        //    column.Width = Unit.Percentage(13);
        //    column.EditorProperties().ComboBox(combo =>
        //    {
        //        combo.TextField = "Name";
        //        combo.ValueField = "id";
        //        combo.ValueType = typeof(string);

        //        combo.DataSource = ViewBag.Currency;

        //        combo.Columns.Add("id", IWSLocalResource.id, Unit.Percentage(50));
        //        combo.Columns.Add("name", IWSLocalResource.Currency, Unit.Percentage(50));
        //        combo.TextFormatString = "{1}";
        //    });
        //});

        settings.Columns.Add(column =>
        {
            column.FieldName = "Updated";
            column.Caption = IWSLocalResource.Updated;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.Width = Unit.Percentage(6);
            column.EditorProperties().DateEdit(d =>
            {
                d.EditFormatString = "MM/dd/yyyy";
                d.EditFormat = EditFormat.Custom;
                d.Width = Unit.Percentage(100);
                d.DisplayFormatString = "yyyy-MM-dd";
            });
            column.Visible = false;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Posted";
            column.Caption = IWSLocalResource.Posted;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.Width = Unit.Percentage(6);
            column.EditorProperties().DateEdit(d =>
            {
                d.EditFormat = EditFormat.Custom;
                d.Width = Unit.Percentage(100);
                d.DisplayFormatString = "yyyy-MM-dd";
            });
            column.Visible = false;
        });

        #region Template Edit
        settings.SetEditFormTemplateContent(c =>
        {

            Html.DevExpress().FormLayout(formLayoutSettings =>
            {
                formLayoutSettings.Name = "ImmoViewEdit";
                formLayoutSettings.Width = Unit.Percentage(100);
                formLayoutSettings.ColCount = 3;
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Id";
                    i.Caption = IWSLocalResource.id;
                    i.Width = Unit.Percentage(50);
                    i.NestedExtension().TextBox(s =>
                    {
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75);
                        s.TabIndex = 1;
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Asset";
                    i.Caption = IWSLocalResource.name;
                    i.Width = Unit.Percentage(50);
                    i.NestedExtension().TextBox(s =>
                    {
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75);
                        s.TabIndex = 2;
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "CostOfAsset";
                    i.Caption = IWSLocalResource.CostOfAsset;
                    i.Width = Unit.Percentage(50);
                    i.NestedExtension().TextBox(s =>
                    {
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Properties.DisplayFormatString = "N";
                        s.Width = Unit.Percentage(75);
                        s.TabIndex = 3;
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "ScrapValue";
                    i.Caption = IWSLocalResource.ScrapValue;
                    i.Width = Unit.Percentage(50);
                    i.NestedExtension().TextBox(s =>
                    {
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Properties.DisplayFormatString = "N";
                        s.Width = Unit.Percentage(75);
                        s.TabIndex = 4;
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Currency";
                    i.Caption = IWSLocalResource.Currency;
                    i.NestedExtension().ComboBox(s =>
                    {
                        s.Properties.TextField = "name";
                        s.Properties.ValueField = "id";
                        s.Properties.ValueType = typeof(string);
                        s.Properties.DataSource = ViewBag.Currency;
                        s.Properties.Columns.Add(column =>
                        {
                            column.FieldName = "id";
                            column.Caption = IWSLocalResource.id;
                            column.Width = Unit.Percentage(15);

                        });
                        s.Properties.Columns.Add(column =>
                        {
                            column.FieldName = "name";
                            column.Caption = IWSLocalResource.Currency;
                            column.Width = Unit.Percentage(85);

                        });
                        s.Properties.TextFormatString = "{1}";
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75.1);
                        s.TabIndex = 5;
                    });
                });
                //formLayoutSettings.Items.Add(i =>
                //{
                //    i.FieldName = "Currency";
                //    i.Caption = IWSLocalResource.Currency;
                //    i.NestedExtension().ComboBox(s =>
                //    {
                //        s.Properties.TextField = "name";
                //        s.Properties.ValueField = "id";
                //        s.Properties.ValueType = typeof(string);
                //        s.Properties.DataSource = ViewBag.Currency;
                //        s.Properties.Columns.Add(column =>
                //        {
                //            column.FieldName = "id";
                //            column.Caption = IWSLocalResource.id;
                //            column.Width = Unit.Percentage(20);

                //        });
                //        s.Properties.Columns.Add(column =>
                //        {
                //            column.FieldName = "name";
                //            column.Caption = IWSLocalResource.Currency;
                //            column.Width = Unit.Percentage(80);

                //        });
                //        s.Properties.TextFormatString = "{1}";
                //        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                //        s.ShowModelErrors = false;
                //        s.Width = Unit.Percentage(75.1);
                //        s.TabIndex = 5;
                //    });
                //});
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "LifeSpan";
                    i.Caption = IWSLocalResource.LifeSpan;
                    i.Width = Unit.Percentage(50);
                    i.NestedExtension().TextBox(s =>
                    {
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75);
                        s.TabIndex = 6;
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Started";
                    i.Caption = IWSLocalResource.StartedDate;
                    i.NestedExtensionType = FormLayoutNestedExtensionItemType.DateEdit;
                    i.NestedExtension().DateEdit(s =>
                    {
                        s.Properties.UseMaskBehavior = true;
                        s.Properties.EditFormat = EditFormat.Date;
                        s.Width = Unit.Percentage(70.5);
                        s.Properties.AllowUserInput = true;
                        s.Properties.AllowMouseWheel = true;
                        s.TabIndex = 7;
                    });
                });
                //formLayoutSettings.Items.AddEmptyItem();
                //formLayoutSettings.Items.AddEmptyItem();
                //formLayoutSettings.Items.Add(i =>
                //{
                //    i.FieldName = "Type";
                //    i.Caption = IWSLocalResource.Type;
                //    i.NestedExtension().ComboBox(s =>
                //    {
                //        s.Properties.TextField = "name";
                //        s.Properties.ValueField = "id";
                //        s.Properties.ValueType = typeof(string);
                //        s.Properties.DataSource = ViewBag.ComboAccountId;
                //        s.Properties.Columns.Add(column =>
                //        {
                //            column.FieldName = "id";
                //            column.Caption = IWSLocalResource.id;
                //            column.Width = Unit.Percentage(15);

                //        });
                //        s.Properties.Columns.Add(column =>
                //        {
                //            column.FieldName = "name";
                //            column.Caption = IWSLocalResource.account;
                //            column.Width = Unit.Percentage(85);

                //        });
                //        s.Properties.TextFormatString = "{0}-{1}";
                //        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                //        s.ShowModelErrors = true;
                //        s.Width = Unit.Percentage(75.1);
                //    });
                //});
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();



                //formLayoutSettings.Items.Add(i =>
                //{
                //    i.FieldName = "Frequency";
                //    i.Caption = IWSLocalResource.Frequency;
                //    i.NestedExtension().ComboBox(s =>
                //    {
                //        s.Properties.TextField = "name";
                //        s.Properties.ValueField = "id";
                //        s.Properties.ValueType = typeof(string);
                //        s.Properties.DataSource = ViewBag.ComboAccountId;
                //        s.Properties.Columns.Add(column =>
                //        {
                //            column.FieldName = "id";
                //            column.Caption = IWSLocalResource.id;
                //            column.Width = Unit.Percentage(15);

                //        });
                //        s.Properties.Columns.Add(column =>
                //        {
                //            column.FieldName = "name";
                //            column.Caption = IWSLocalResource.account;
                //            column.Width = Unit.Percentage(85);

                //        });
                //        s.Properties.TextFormatString = "{0}-{1}";
                //        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                //        s.ShowModelErrors = true;
                //        s.Width = Unit.Percentage(75.1);
                //    });
                //});

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Account";
                    i.Caption = IWSLocalResource.account;
                    i.NestedExtension().ComboBox(s =>
                    {
                        s.Properties.TextField = "name";
                        s.Properties.ValueField = "id";
                        s.Properties.ValueType = typeof(string);
                        s.Properties.DataSource = ViewBag.ComboAccountId;
                        s.Properties.Columns.Add(column =>
                        {
                            column.FieldName = "id";
                            column.Caption = IWSLocalResource.id;
                            column.Width = Unit.Percentage(15);

                        });
                        s.Properties.Columns.Add(column =>
                        {
                            column.FieldName = "name";
                            column.Caption = IWSLocalResource.account;
                            column.Width = Unit.Percentage(85);

                        });
                        s.Properties.TextFormatString = "{0}-{1}";
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75.1);
                        s.TabIndex = 8;
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "OAccount";
                    i.Caption = IWSLocalResource.oaccount;
                    i.NestedExtension().ComboBox(s =>
                    {
                        s.Properties.TextField = "name";
                        s.Properties.ValueField = "id";
                        s.Properties.ValueType = typeof(string);
                        s.Properties.DataSource = ViewBag.ComboAccountId;
                        s.Properties.Columns.Add(column =>
                        {
                            column.FieldName = "id";
                            column.Caption = IWSLocalResource.id;
                            column.Width = Unit.Percentage(15);

                        });
                        s.Properties.Columns.Add(column =>
                        {
                            column.FieldName = "name";
                            column.Caption = IWSLocalResource.account;
                            column.Width = Unit.Percentage(85);

                        });
                        s.Properties.TextFormatString = "{0}-{1}";
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75.1);
                        s.TabIndex = 9;
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();

                formLayoutSettings.Items.Add(i =>
                {
                    i.ShowCaption = DefaultBoolean.False;
                    i.HorizontalAlign = FormLayoutHorizontalAlign.Center;
                }).SetNestedContent(() =>
                {

                    Html.DevExpress().Button(
                b =>
                {
                    b.Name = "btnUpdate";
                    b.Text = "";
                    b.ToolTip = IWSLocalResource.btnUpdate;
                    b.Style[HtmlTextWriterStyle.MarginRight] = "5px";
                    b.Images.Image.IconID = IconID.ActionsApply16x16;
                    b.Width = Unit.Pixel(80);
                    b.ClientSideEvents.Click = "function(s, e){ ImmoGridView.UpdateEdit(); }";
                    b.TabIndex = 10;
                }).Render();

                    Html.DevExpress().Button(
                b =>
                {
                    b.Name = "btnCancel";
                    b.Text = "";
                    b.ToolTip = IWSLocalResource.btnCancel;
                    b.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                    b.Images.Image.IconID = IconID.ActionsCancel16x16;
                    b.Width = Unit.Pixel(80);
                    b.ClientSideEvents.Click = "function(s, e){ ImmoGridView.CancelEdit(); }";
                    b.TabIndex = 11;
                }).Render();
                });
            })
            .Bind(ViewData["immo"] ?? c.DataItem)
            .Render();
        });

        #endregion
        //settings.SetDetailRowTemplateContent(c =>
        //{
        //    Html.RenderAction("GridViewDetail", new { ID = DataBinder.Eval(c.DataItem, "ID") });
        //});
        settings.SetDetailRowTemplateContent(c =>
        {
            //Session["TransId"] = DataBinder.Eval(c.DataItem, "Id");
            Html.RenderAction("ImmoDetailGridView", new { TransId = DataBinder.Eval(c.DataItem, "Id") });
        });
    });
    if (ViewData["GenericError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["GenericError"]);
    }
}
@grid.Bind(Model).GetHtml()