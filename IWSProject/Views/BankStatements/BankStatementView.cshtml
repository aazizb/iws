@using IWSProject.Content

<script type="text/javascript">

    var selectedIDs = null;

    function OnButtonClick() {
        if (BankStatementsGridView.IsCustomizationWindowVisible())
            BankStatementsGridView.HideCustomizationWindow();
        else
            BankStatementsGridView.ShowCustomizationWindow();
        UpdateButtonText();
    }
    function CustomizationWindowCloseUp(s, e) {
        UpdateButtonText();
    }
    function UpdateButtonText() {
        var text = BankStatementsGridView.IsCustomizationWindowVisible() ? "Hide" : "Show";
        btShowCustomizationWindow.SetText(text);
    }
    function OnBeginCallback(s, e) {
        e.customArgs["selectedIDs"] = selectedIDs;
        selectedIDs = null;
    }
    function OnEndCallback(s, e) {
        setGridHeaderCheckboxes(s, e);
        TrackLayout(s.cpClientLayout);
    }
    function TrackLayout(layout) {
        $("#LastLayout").text(layout);
    }
    function OnSelectionChanged(s, e) {
        setGridHeaderCheckboxes(s, e);
        s.GetSelectedFieldValues("id;Betrag;Kontonummer", GetSelectedFieldValues);
    }
    function GetSelectedFieldValues(values) {
        selectedIDs = values.join(';');
    }
    function OnSubmitClick(s, e) {
        //$("#selectedIDs").val(selectedIDs);
        callbackPanelPartialView.PerformCallback();
    }
    function CheckedChanged(s, e) {
        BankStatementsGridView.PerformCallback({ isChecked: s.GetChecked() });
    }
    function setGridHeaderCheckboxes(s, e) {
        var indexes = BankStatementsGridView.cpIndexesSelected;
        cbAll.SetChecked(s.GetSelectedRowCount() !== Object.size(indexes));
    }
    Object.size = function (obj) {
        var size = 0, key;

        for (key in obj) {
            if (obj.hasOwnProperty(key)) size++;
        }
        return size;
    };
</script>

@{
    ViewBag.Title = IWSLocalResource.BankStatement;
}
<div class="accountHeader">
    <h2>@ViewBag.Title</h2>
</div>
@using (Html.BeginForm("Index", "BankStatements"))
{
    @Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "FormLayout";
    settings.Width = Unit.Percentage(100);
    settings.Items.AddGroupItem(gsettings =>
    {
        gsettings.ColCount = 2;
        gsettings.Caption = IWSLocalResource.QueryDetail;
        gsettings.Items.Add(i =>
        {
            i.Caption = " ";
            i.Name = "btnSubmit";
            i.NestedExtension().Button(e =>
            {
                e.Name = "btnOk";
                e.Text = IWSLocalResource.Validate;
                e.ControlStyle.CssClass = "button";
                e.Width = Unit.Pixel(105);
                e.ClientSideEvents.Click = "OnSubmitClick";
                e.UseSubmitBehavior = false;
            });
        });
        gsettings.Items.Add(i =>
        {
            i.Caption = " ";
            i.SetNestedContent(() =>
            {
                Html.RenderPartial("ShowHideButtonPartialView");
            });
        });
    });
}).GetHtml()

    @Html.Partial("CallbackPanelPartialView")
}
