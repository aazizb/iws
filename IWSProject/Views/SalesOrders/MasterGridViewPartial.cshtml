@using IWSProject.Content
@using IWSProject.Models
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "SalesOrder";
        settings.Width = Unit.Percentage(100);


        settings.CallbackRouteValues = new { Controller = "SalesOrders", Action = "MasterGridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "SalesOrders", Action = "MasterGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "SalesOrders", Action = "MasterGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "SalesOrders", Action = "MasterGridViewPartialDelete" };

        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsContextMenu.Enabled = true;

        settings.ClientSideEvents.RowClick = "OnMRowClick";
        settings.ClientSideEvents.RowDblClick = "OnMRowClick";
        settings.ClientSideEvents.Init = "OnMInit";
        settings.ClientSideEvents.SelectionChanged = "OnMSelectionChanged";
        settings.ClientSideEvents.BeginCallback = "OnMBeginCallback";
        settings.ClientSideEvents.EndCallback = "OnMEndCallback";
        settings.ClientSideEvents.DetailRowCollapsing = "OnDetailRowCollapsing";
        settings.ClientSideEvents.DetailRowExpanding = "OnDetailRowExpanding";

        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsBehavior.EnableRowHotTrack = true;
        settings.SettingsBehavior.AllowSelectByRowClick = false;
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsBehavior.ColumnMoveMode = GridColumnMoveMode.AmongSiblings;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;
        settings.SettingsResizing.Visualization = ResizingMode.Live;

        settings.Styles.RowHotTrack.Cursor = "pointer";
        settings.Styles.RowHotTrack.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");
        settings.Styles.AlternatingRow.Enabled = DefaultBoolean.True;
        settings.Styles.AlternatingRow.BackColor = System.Drawing.Color.WhiteSmoke;
        settings.Styles.SelectedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");
        settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");

        settings.ControlStyle.Paddings.Padding = Unit.Pixel(10);
        settings.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
        settings.ControlStyle.BorderBottom.BorderWidth = Unit.Pixel(1);

        settings.Settings.ShowFooter = true;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRowMenu = true;

        settings.SettingsPager.Visible = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSize = 19;

        settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;
        settings.SettingsDetail.ShowDetailRow = true;

        settings.Images.DetailCollapsedButton.IconID = IconID.ActionsAdd16x16;
        settings.Images.DetailExpandedButton.IconID = IconID.ActionsRemove16x16;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowSelectCheckbox = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.Width = Unit.Percentage(8);

        settings.SettingsCommandButton.NewButton.Image.IconID = IconID.ActionsAdditem16x16;
        settings.SettingsCommandButton.NewButton.Image.ToolTip = IWSLocalResource.btnAddNew;
        settings.SettingsCommandButton.NewButton.Text = " ";

        settings.SettingsCommandButton.EditButton.Image.IconID = IconID.ActionsEditname16x16;
        settings.SettingsCommandButton.EditButton.Image.ToolTip = IWSLocalResource.btnEdit;
        settings.SettingsCommandButton.EditButton.Text = " ";

        settings.SettingsCommandButton.DeleteButton.Image.IconID = IconID.ActionsDeletelist16x16;
        settings.SettingsCommandButton.DeleteButton.Image.ToolTip = IWSLocalResource.btnDelete;
        settings.SettingsCommandButton.DeleteButton.Text = " ";

        settings.CommandButtonInitialize = (s, e) =>
        {
            if (e.VisibleIndex == -1) return;
            MVCxGridView g = (MVCxGridView)s;
            bool isValidated = Convert.ToBoolean(g.GetRowValues(e.VisibleIndex, "IsValidated"));
            if (e.ButtonType == ColumnCommandButtonType.Edit || e.ButtonType == ColumnCommandButtonType.Delete || e.ButtonType == ColumnCommandButtonType.SelectCheckbox)
            {
                e.Visible = false.Equals(isValidated);
            }
        };

        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["TransDate"] = DateTime.Today;
            e.NewValues["ItemDate"] = DateTime.Today;
            e.NewValues["EntryDate"] = DateTime.Today;
            e.NewValues["IsValidated"] = false;
        };

        settings.BeforeGetCallbackResult = (sender, e) =>
        {
            MVCxGridView g = (MVCxGridView)sender;
            if (ViewData["NewKeyValue"] != null)
            {
                g.DetailRows.ExpandRowByKey((int)ViewData["NewKeyValue"]);
            }
        };

        settings.KeyFieldName = "id";

        settings.Columns.Add(column =>
        {
            column.FieldName = "id";
            column.Caption = IWSLocalResource.id;
            column.Width = Unit.Percentage(6);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "store";
            column.Caption = IWSLocalResource.store;
            column.Width = Unit.Percentage(18);
            column.EditorProperties().ComboBox(combo =>
            {
                combo.TextField = "Name";
                combo.ValueField = "id";
                combo.ValueType = typeof(string);
                combo.DataSource = IWSLookUp.GetStore();
                combo.Columns.Add("id", IWSLocalResource.id, Unit.Percentage(25));
                combo.Columns.Add("name", IWSLocalResource.store, Unit.Percentage(75));
                combo.TextFormatString = "{0}-{1}";
                combo.Width = Unit.Percentage(100);

            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "account";
            column.Caption = IWSLocalResource.customer;
            column.Width = Unit.Percentage(18);
            column.EditorProperties().ComboBox(combo =>
            {
                combo.TextField = "Name";
                combo.ValueField = "id";
                combo.ValueType = typeof(string);
                combo.DataSource = IWSLookUp.GetCustomers();
                combo.Columns.Add("id", IWSLocalResource.id, Unit.Percentage(25));
                combo.Columns.Add("name", IWSLocalResource.customer, Unit.Percentage(75));
                combo.TextFormatString = "{0}-{1}";
                combo.Width = Unit.Percentage(100);
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "TransDate";
            column.Caption = IWSLocalResource.TransDate;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.Width = Unit.Percentage(8);
            column.EditorProperties().DateEdit(d =>
            {
                d.EditFormatString = "MM/dd/yyyy";
                d.NullDisplayText = "MM/dd/yyyy";
                d.EditFormat = EditFormat.Custom;
                d.Width = Unit.Percentage(100);
                d.DisplayFormatString = "yyyy-MM-dd";
                d.DisplayFormatInEditMode = true;
                d.AllowUserInput = true;
                d.AllowMouseWheel = true;
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "oPeriode";
            column.Caption = IWSLocalResource.periode;
            column.Width = Unit.Percentage(6);
            column.UnboundType = DevExpress.Data.UnboundColumnType.String;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "oYear";
            column.Caption = IWSLocalResource.Year;
            column.Width = Unit.Percentage(4);
            column.UnboundType = DevExpress.Data.UnboundColumnType.String;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "oMonth";
            column.Caption = IWSLocalResource.Month;
            column.Width = Unit.Percentage(4);
            column.UnboundType = DevExpress.Data.UnboundColumnType.String;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "oTotal";
            column.Caption = IWSLocalResource.Total;
            column.Width = Unit.Percentage(10);
            column.UnboundType = DevExpress.Data.UnboundColumnType.Decimal;
            column.PropertiesEdit.DisplayFormatString = "N";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "oNet";
            column.Caption = IWSLocalResource.net;
            column.Width = Unit.Percentage(10);
            column.UnboundType = DevExpress.Data.UnboundColumnType.Decimal;
            column.PropertiesEdit.DisplayFormatString = "N";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "oVat";
            column.Caption = IWSLocalResource.vat;
            column.Width = Unit.Percentage(10);
            column.UnboundType = DevExpress.Data.UnboundColumnType.Decimal;
            column.PropertiesEdit.DisplayFormatString = "N";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "oCurrency";
            column.Caption = IWSLocalResource.Currency;
            column.UnboundType = DevExpress.Data.UnboundColumnType.String;
            column.Width = Unit.Percentage(5);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "IsValidated";
            column.Caption = IWSLocalResource.IsValidated;
            column.Width = Unit.Percentage(5);
            column.EditorProperties().CheckBox(checkBox =>
            {
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "DeliveryTerms";
            column.Caption = IWSLocalResource.DeliveryTerms;
            column.Width = Unit.Percentage(10);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "HeaderText";
            column.Caption = IWSLocalResource.text;
            column.Width = Unit.Percentage(17);
        });

        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "oTotal").DisplayFormat = "N";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "oNet").DisplayFormat = "N";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "oVat").DisplayFormat = "N";

        settings.GroupSummary.Add(DevExpress.Data.SummaryItemType.Sum, "oTotal").DisplayFormat = "N";
        settings.GroupSummary.Add(DevExpress.Data.SummaryItemType.Sum, "oNet").DisplayFormat = "N";
        settings.GroupSummary.Add(DevExpress.Data.SummaryItemType.Sum, "oVat").DisplayFormat = "N";

        #region Template

        settings.SetEditFormTemplateContent(c =>
        {

            var isValidated = DataBinder.Eval(c.DataItem, "IsValidated");

            ViewBag.Visible = ((bool)isValidated == true) ? false : true;

            ViewBag.IsNewRow = c.Grid.IsNewRowEditing;

            Html.DevExpress().FormLayout(formLayoutSettings =>
            {

                #region Button

                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.ShowCaption = DefaultBoolean.False;
                    i.HorizontalAlign = FormLayoutHorizontalAlign.Center;
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().Button(
                btnSettings =>
                {
                    btnSettings.Name = "btnMUpdate";
                    btnSettings.Text = "";
                    btnSettings.ToolTip = IWSLocalResource.btnUpdate;
                    btnSettings.Style[HtmlTextWriterStyle.MarginRight] = "5px";
                    btnSettings.Images.Image.IconID = IconID.ActionsApply16x16;
                    btnSettings.Width = Unit.Pixel(80);
                    btnSettings.ClientSideEvents.Click = "function(s, e){ SalesOrder.UpdateEdit(); }";
                    btnSettings.ClientVisible = ViewBag.Visible;
                    btnSettings.TabIndex = 8;
                }).Render();
                    Html.DevExpress().Button(
                btnSettings =>
                {
                    btnSettings.Name = "btnMCancel";
                    btnSettings.Text = "";
                    btnSettings.ToolTip = IWSLocalResource.btnCancel;
                    btnSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                    btnSettings.Images.Image.IconID = IconID.ActionsCancel16x16;
                    btnSettings.Width = Unit.Pixel(80);
                    btnSettings.ClientSideEvents.Click = "function(s, e){ SalesOrder.CancelEdit(); }";
                    btnSettings.TabIndex = 9;
                }).Render();
                });
                #endregion

                formLayoutSettings.Name = "SalesOrderEdit";

                formLayoutSettings.Width = Unit.Percentage(100);
                formLayoutSettings.ColCount = 2;
                if (ViewBag.IsNewRow)
                    formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "id";
                    i.Visible = !ViewBag.IsNewRow;
                    i.Caption = IWSLocalResource.id;
                    i.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
                    i.NestedExtension().TextBox(s =>
                    {
                        s.Width = Unit.Percentage(96);
                        s.ReadOnly = true;
                    });
                });
                formLayoutSettings.Items.Add(i =>
                {
                    i.Name = "IsValidated";
                    i.FieldName = "IsValidated";
                    i.Caption = IWSLocalResource.IsValidated;
                    i.NestedExtensionType = FormLayoutNestedExtensionItemType.CheckBox;
                    i.NestedExtension().CheckBox(s =>
                    {
                        s.Width = Unit.Percentage(20);
                        s.ReadOnly = true;
                    });
                });
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "store";
                    i.Caption = IWSLocalResource.store;
                    i.NestedExtension().ComboBox(s =>
                    {
                        s.Properties.TextField = "Name";
                        s.Properties.ValueField = "id";
                        s.Properties.ValueType = typeof(string);
                        s.Properties.DataSource = IWSLookUp.GetStore();
                        s.Properties.Columns.Add(a =>
                        {
                            a.FieldName = "id";
                            a.Caption = IWSLocalResource.id;
                            a.Width = Unit.Percentage(15);
                        });
                        s.Properties.Columns.Add(a =>
                        {
                            a.FieldName = "Name";
                            a.Caption = IWSLocalResource.name;
                            a.Width = Unit.Percentage(85);
                        });
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.TextFormatString = "{0}-{1}";
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(100);
                        s.TabIndex = 1;
                        s.Properties.ClientSideEvents.Init = "function(s, e) { s.Focus(); }";
                    });
                });
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "TransDate";
                    i.Caption = IWSLocalResource.TransDate;
                    i.NestedExtensionType = FormLayoutNestedExtensionItemType.DateEdit;
                    i.NestedExtension().DateEdit(s =>
                    {
                        s.Properties.UseMaskBehavior = true;
                        s.Properties.EditFormat = EditFormat.Date;
                        s.Width = Unit.Percentage(94);
                        s.Properties.AllowUserInput = true;
                        s.Properties.AllowMouseWheel = true;
                        s.TabIndex = 5;
                    });
                });
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "account";
                    i.Caption = IWSLocalResource.customer;
                    i.NestedExtension().ComboBox(s =>
                    {
                        s.Properties.TextField = "Name";
                        s.Properties.ValueField = "id";
                        s.Properties.ValueType = typeof(string);
                        s.Properties.DataSource = IWSLookUp.GetCustomer();
                        s.Properties.Columns.Add(a =>
                        {
                            a.FieldName = "id";
                            a.Caption = IWSLocalResource.id;
                            a.Width = Unit.Percentage(15);
                        });
                        s.Properties.Columns.Add(a =>
                        {
                            a.FieldName = "Name";
                            a.Caption = IWSLocalResource.name;
                            a.Width = Unit.Percentage(85);
                        });
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.TextFormatString = "{0}-{1}";
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(100);
                        s.TabIndex = 2;
                    });
                });
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "ItemDate";
                    i.Caption = IWSLocalResource.ItemDate;
                    i.NestedExtensionType = FormLayoutNestedExtensionItemType.DateEdit;
                    i.NestedExtension().DateEdit(s =>
                    {
                        s.Properties.UseMaskBehavior = true;
                        s.Properties.EditFormat = EditFormat.Date;
                        s.Width = Unit.Percentage(94);
                        s.Properties.AllowUserInput = false;
                        s.Properties.AllowMouseWheel = false;
                        s.ReadOnly = true;
                        s.TabIndex = 6;
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "EntryDate";
                    i.Caption = IWSLocalResource.EntryDate;
                    i.NestedExtensionType = FormLayoutNestedExtensionItemType.DateEdit;
                    i.NestedExtension().DateEdit(s =>
                    {
                        s.Properties.UseMaskBehavior = true;
                        s.Properties.EditFormat = EditFormat.Date;
                        s.Width = Unit.Percentage(94);
                        s.Properties.AllowUserInput = false;
                        s.Properties.AllowMouseWheel = false;
                        s.ReadOnly = true;
                        s.TabIndex = 7;
                    });
                });
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "DeliveryTerms";
                    i.Caption = IWSLocalResource.DeliveryTerms;
                    i.ColSpan = 2;
                    i.NestedExtension().Memo(s =>
                    {
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(99.3);
                        s.TabIndex = 3;
                    });

                });
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "HeaderText";
                    i.Caption = IWSLocalResource.text;
                    i.ColSpan = 2;
                    i.NestedExtension().Memo(s =>
                    {
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(99.3);
                        s.TabIndex = 4;
                    });
                });
            })
            .Bind(ViewData["item"] ?? c.DataItem)
            .Render();
        });

        #endregion

        settings.SetDetailRowTemplateContent(c =>
        {
            Session["transid"] = DataBinder.Eval(c.DataItem, "ID");
            Session["IsValidated"] = (bool)DataBinder.Eval(c.DataItem, "IsValidated");
            Html.RenderAction("DetailGridViewPartial", new
            {
                transid = Session["transid"],
                IsValidated = Session["IsValidated"],
                newKeyValue = ViewData["NewKeyValue"]
            });
        });
    });

    if (ViewData["GenericError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["GenericError"]);
    }
}
@grid.Bind(Model).GetHtml()
