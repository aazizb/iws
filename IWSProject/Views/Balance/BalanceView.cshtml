
@using IWSProject.Models
@using IWSProject.Content
@model List<AccountBalanceViewModel>

<script type="text/javascript">
    var selectedIDs = null;
    var vStart = null;
    var vEnd = null;
    var id = null;

    function OnSubmitClick(s, e) {
        id = gridLookupIDs.GetText()
        vPeriod = fromYearMonth.GetText();
        vStart = fromYearMonth.GetText();
        vEnd = toYearMonth.GetText();
        id = gridLookupIDs.GetText();

        callbackPartialView.PerformCallback();
    }
    function OnBeginCallback(s, e) {
        e.customArgs["selectedIDs"] = id;
        e.customArgs["Start"] = vStart;
        e.customArgs["End"] = vEnd;
    }
    function OnSelectionChanged(s, e) {
        var g = gridLookup.GetGridView();
        g.OnGetRowValues("Id", GetSelectedFieldValuesCallback)
    }
    function GetSelectedFieldValuesCallback(values) {
        selectedIDs = values.join(';');
    }
    function HideGridLookup() {
        gridLookupIDs.ConfirmCurrentSelection();
        gridLookupIDs.HideDropDown();
    }
</script>
<script type="text/javascript">

    function OnButtonClick() {
        if (AccountBlanacePartialView.IsCustomizationWindowVisible()) {

            AccountBlanacePartialView.HideCustomizationWindow();
        }
        else {
            AccountBlanacePartialView.ShowCustomizationWindow();
        }
        UpdateButtonText();
    }
    function CustomizationWindowCloseUp(s, e) {
        UpdateButtonText();
    }
    function UpdateButtonText() {
        var text = AccountBlanacePartialView.IsCustomizationWindowVisible() ? "Hide" : "Show";
        btShowCustomizationWindow.SetText(text);
    }
    function OnEndCallback(s, e) {
        TrackLayout(s.cpClientLayout);
    }
</script>
@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "FormLayout";
    settings.Width = Unit.Percentage(100);
    settings.Items.AddGroupItem(gsettings => {
        gsettings.ColCount = 6;
        gsettings.Caption = IWSLocalResource.QueryDetail;
        gsettings.Items.Add(i =>
        {
            i.Caption = IWSLocalResource.PeriodFrom;
            i.SetNestedContent(() => {
                Html.RenderPartial("FromYearMonthDateEditPartialView");
            });
        });
        gsettings.Items.Add(i =>
        {
            i.Caption = IWSLocalResource.PeriodTo;
            i.SetNestedContent(() =>
            {
                Html.RenderPartial("ToYearMonthDateEditPartialView");
            });
        });
        gsettings.Items.Add(i =>
        {
            i.Caption = IWSLocalResource.account;
            i.SetNestedContent(() =>
            {
                Html.RenderPartial("GridLookupPartial");
            });
        });
        gsettings.Items.Add(i =>
        {
            i.Caption = " ";
            i.Name = "btnSubmit";
            i.NestedExtension().Button(e =>
            {
                e.Name = "btnOk";
                e.Text = IWSLocalResource.Validate;
                e.ControlStyle.CssClass = "button";
                e.Width = Unit.Pixel(105);
                e.ClientSideEvents.Click = "OnSubmitClick";
                e.UseSubmitBehavior = false;
            });
        });
        gsettings.Items.Add(i =>
        {
            i.Caption = " ";
            i.Name = "btnExp";
            i.NestedExtension().Button(e =>
            {
                e.Name = "btnExport";
                e.Text = IWSLocalResource.Export;
                e.Width = Unit.Pixel(105);
                e.UseSubmitBehavior = false;
                e.RouteValues = new { Controller = "Balance", Action = "Export" };
            });
        });
        gsettings.Items.Add(i =>
        {
            i.Caption = " ";
            i.SetNestedContent(() =>
            {
                Html.RenderPartial("ShowHideButtonPartialView");
            });
        });
    });
}).GetHtml()

@Html.Partial("_CallbackPartialView")
