@using IWSProject.Content
@using IWSProject.Controllers

@Html.DevExpress().GridView(settings =>
{
    settings.Name = "AccountBlanacePartialView";

    settings.CallbackRouteValues = new { Controller = "Balance", Action = "AccountBalancePartialView" };

    settings.KeyFieldName = "AccountID";
    settings.SettingsContextMenu.Enabled = true;

    settings.ClientSideEvents.CustomizationWindowCloseUp = "CustomizationWindowCloseUp";

    settings.SettingsBehavior.EnableCustomizationWindow = true;

    settings.SettingsContextMenu.RowMenuItemVisibility.DeleteRow = false;
    settings.SettingsContextMenu.RowMenuItemVisibility.EditRow = false;
    settings.SettingsContextMenu.RowMenuItemVisibility.NewRow = false;

    settings.SettingsBehavior.EnableRowHotTrack = true;
    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.SettingsBehavior.AllowSelectByRowClick = false;
    settings.SettingsBehavior.AllowEllipsisInText = true;
    settings.SettingsBehavior.ColumnMoveMode = GridColumnMoveMode.AmongSiblings;
    settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;
    settings.SettingsResizing.Visualization = ResizingMode.Live;

    settings.Styles.RowHotTrack.Cursor = "pointer";
    settings.Styles.RowHotTrack.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");
    settings.Styles.AlternatingRow.Enabled = DefaultBoolean.True;
    settings.Styles.AlternatingRow.BackColor = System.Drawing.Color.WhiteSmoke;
    settings.Styles.SelectedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");
    settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");

    settings.Width = Unit.Percentage(100);

    settings.ControlStyle.Paddings.Padding = Unit.Pixel(0);
    settings.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
    settings.ControlStyle.BorderBottom.BorderWidth = Unit.Pixel(1);

    settings.SettingsPager.Visible = true;
    settings.SettingsPager.Position = PagerPosition.Bottom;
    settings.SettingsPager.FirstPageButton.Visible = true;
    settings.SettingsPager.LastPageButton.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;

    settings.SettingsPager.PageSize = 24;

    settings.PreRender = settings.BeforeGetCallbackResult = (s, e) =>
    {
        MVCxGridView g = (MVCxGridView)s;
        Session["gridViewState"] = new MVCxGridViewState(g);
    };

    settings.Columns.Add(column =>
    {
        column.FieldName = "AccountID";
        column.Caption = IWSLocalResource.accountid;
        column.Width = Unit.Percentage(8);
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Name";
        column.Caption = IWSLocalResource.account;
        column.Width = Unit.Percentage(30);
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Periode";
        column.Caption = IWSLocalResource.periode;
        column.Width = Unit.Percentage(6);
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "OYear";
        column.Caption = IWSLocalResource.Year;
        column.Width = Unit.Percentage(5);
        column.Visible = false;
        column.EditorProperties().TextBox(textBox =>
        {
            textBox.NullText = "...";
        });
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "OMonth";
        column.Caption = IWSLocalResource.Month;
        column.Width = Unit.Percentage(5);
        column.Visible = false;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "IDebit";
        column.Caption = IWSLocalResource.idebit;
        column.Width = Unit.Percentage(14);
        column.EditorProperties().TextBox(textBox =>
        {
            textBox.DisplayFormatString = "N";
        });
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "ICredit";
        column.Caption = IWSLocalResource.icredit;
        column.Width = Unit.Percentage(14);
        column.EditorProperties().TextBox(textBox =>
        {
            textBox.DisplayFormatString = "N";
        });
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Debit";
        column.Caption = IWSLocalResource.debit;
        column.Width = Unit.Percentage(14);
        column.EditorProperties().TextBox(textBox =>
        {
            textBox.DisplayFormatString = "N";
        });
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Credit";
        column.Caption = IWSLocalResource.credit;
        column.Width = Unit.Percentage(14);
        column.EditorProperties().TextBox(textBox =>
        {
            textBox.DisplayFormatString = "N";
        });
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "SDebit";
        column.Caption = IWSLocalResource.fdebit;
        column.Width = Unit.Percentage(14);
        column.EditorProperties().TextBox(textBox =>
        {
            textBox.DisplayFormatString = "N";
        });
        column.Visible = false;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "SCredit";
        column.Caption = IWSLocalResource.fcredit;
        column.Width = Unit.Percentage(14);
        column.EditorProperties().TextBox(textBox =>
        {
            textBox.DisplayFormatString = "N";
        });
        column.Visible = false;
    });
    settings.Columns.Add(column =>
    {
        column.Visible = true;
        column.FieldName = "Currency";
        column.Caption = IWSLocalResource.Currency;
        column.Width = Unit.Percentage(10);
    });
    settings.CustomSummaryCalculate = (s, e) =>
    {
        ASPxSummaryItem item = ((ASPxSummaryItem)e.Item);

        if (item.FieldName != "Currency")
            return;

        if (e.IsGroupSummary)
        {
            e.TotalValue = e.GetValue("Currency");
        }
    };
    settings.SummaryDisplayText = (sender, e) =>
    {
        if (e.IsGroupSummary && e.Item.FieldName != "Currency")
        {
            e.Text = string.Format(IWSLocalResource.Total + ": {0:N}", e.Value);
        }
    };
    settings.Settings.ShowFooter = true;
    settings.SettingsBehavior.AutoExpandAllGroups = true;
    settings.Settings.ShowGroupFooter = GridViewGroupFooterMode.VisibleAlways;

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowFilterRowMenu = true;

    settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Debit").ShowInGroupFooterColumn = "Debit";
    settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Credit").ShowInGroupFooterColumn = "Credit";
    settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Custom, "Currency").ShowInGroupFooterColumn = "Currency";

    settings.GroupSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Debit").ShowInGroupFooterColumn = "Debit";
    settings.GroupSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Credit").ShowInGroupFooterColumn = "Credit";
    settings.GroupSummary.Add(DevExpress.Data.SummaryItemType.Custom, "Currency").ShowInGroupFooterColumn = "Currency";

}).Bind(Model).GetHtml()
