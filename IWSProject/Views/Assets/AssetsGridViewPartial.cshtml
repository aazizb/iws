@using IWSProject.Content
@using IWSProject.Models
@using IWSProject.Models.Entities
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "AssetsGridView";

        settings.CallbackRouteValues = new { Controller = "Assets", Action = "AssetsGridView" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Assets", Action = "AssetsGridViewAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Assets", Action = "AssetsGridViewUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Assets", Action = "AssetsGridViewDelete" };

        settings.ClientSideEvents.CustomizationWindowCloseUp = "CustomizationWindowCloseUp";

        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsContextMenu.Enabled = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.Width = Unit.Percentage(15);
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;

        settings.SettingsBehavior.EnableCustomizationWindow = true;
        settings.SettingsBehavior.EnableRowHotTrack = true;
        settings.SettingsBehavior.AllowSelectByRowClick = false;
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsBehavior.ColumnMoveMode = GridColumnMoveMode.AmongSiblings;
        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.NextColumn;
        settings.SettingsResizing.Visualization = ResizingMode.Live;

        settings.Styles.RowHotTrack.Cursor = "pointer";
        settings.Styles.RowHotTrack.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");
        settings.Styles.AlternatingRow.Enabled = DefaultBoolean.True;
        settings.Styles.AlternatingRow.BackColor = System.Drawing.Color.WhiteSmoke;
        settings.Styles.SelectedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");
        settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#BFDBFF");

        settings.ClientSideEvents.RowDblClick = "function(s, e) { s.StartEditRow(e.visibleIndex); }";

        settings.SettingsCommandButton.NewButton.Image.IconID = IconID.ActionsAdditem16x16;
        settings.SettingsCommandButton.NewButton.Image.ToolTip = IWSLocalResource.btnAddNew;
        settings.SettingsCommandButton.NewButton.Text = " ";

        settings.SettingsCommandButton.EditButton.Image.IconID = IconID.ActionsEditname16x16;
        settings.SettingsCommandButton.EditButton.Image.ToolTip = IWSLocalResource.btnEdit;
        settings.SettingsCommandButton.EditButton.Text = " ";

        settings.SettingsCommandButton.DeleteButton.Image.IconID = IconID.ActionsDeletelist16x16;
        settings.SettingsCommandButton.DeleteButton.Image.ToolTip = IWSLocalResource.btnDelete;
        settings.SettingsCommandButton.DeleteButton.Text = " ";

        settings.KeyFieldName = "Id";
        settings.CustomJSProperties = (s, e) =>
        {
            MVCxGridView g = (MVCxGridView)s;
            e.Properties["cpClientLayout"] = g.SaveClientLayout();
        };
        settings.ClientLayout = (s, e) =>
        {
            switch (e.LayoutMode)
            {
                case ClientLayoutMode.Loading:
                    if (Session["layoutAsset"] != null)
                    {
                        e.LayoutData = Session["layoutAsset"].ToString();
                    }
                    break;
                case ClientLayoutMode.Saving:
                    Session["layoutAsset"] = e.LayoutData;
                    break;
            }
        };
        settings.InitNewRow = (s, e) =>
        {
            e.NewValues["Posted"] = DateTime.Today;
            e.NewValues["Updated"] = DateTime.Today;
            e.NewValues["Started"] = DateTime.Today;
            e.NewValues["ScrapValue"] = 0;
            e.NewValues["Rate"] = 1.00;
            e.NewValues["Depreciation"] = (int)IWSLookUp.DepreciationType.StraightLine;
            e.NewValues["Frequency"] = (int)IWSLookUp.DepreciationFrequency.Yearly;
        };
        settings.CustomColumnDisplayText = (sender, e) =>
        {

            if (e.Column.FieldName == "Depreciation")
            {
                e.DisplayText = IWSLocalResource.StraightLine;
                if (Convert.ToInt32(e.Value) == (int)IWSLookUp.DepreciationType.Degressive)
                    e.DisplayText = IWSLocalResource.Degressive;
            }
        };
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRowMenu = true;

        settings.Width = Unit.Percentage(100);

        settings.ControlStyle.Paddings.Padding = Unit.Pixel(10);
        settings.ControlStyle.Border.BorderWidth = Unit.Pixel(0);
        settings.ControlStyle.BorderBottom.BorderWidth = Unit.Pixel(1);

        settings.SettingsPager.Visible = true;
        settings.SettingsPager.Position = PagerPosition.Bottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;

        settings.SettingsPager.PageSize = 19;

        settings.Columns.Add(column =>
        {
            column.FieldName = "Id";
            column.Caption = IWSLocalResource.id;
            column.Width = Unit.Percentage(8);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Name";
            column.Caption = IWSLocalResource.name;
            column.Width = Unit.Percentage(25);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "ScrapValue";
            column.Caption = IWSLocalResource.ScrapValue;
            column.EditorProperties().TextBox(textBox =>
            {
                textBox.DisplayFormatString = "N";
            });
            column.Width = Unit.Percentage(16);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Currency";
            column.Caption = IWSLocalResource.Currency;
            column.Width = Unit.Percentage(6);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "LifeSpan";
            column.Caption = IWSLocalResource.LifeSpan;
            column.EditorProperties().TextBox(textBox =>
            {
                textBox.DisplayFormatString = "N";
            });
            column.Width = Unit.Percentage(6);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Account";
            column.Caption = IWSLocalResource.account;
            column.EditorProperties().ComboBox(combo =>
            {
                combo.TextField = "Name";
                combo.ValueField = "id";
                combo.ValueType = typeof(string);
                combo.DataSource = ViewBag.PackUnit;
                combo.Columns.Add("id", IWSLocalResource.id, Unit.Percentage(50));
                combo.Columns.Add("name", IWSLocalResource.vat, Unit.Percentage(50));
                combo.TextFormatString = "{1}";
            });
            column.Width = Unit.Percentage(15);
            column.Visible = false;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "OAccount";
            column.Caption = IWSLocalResource.oaccount;
            column.EditorProperties().ComboBox(combo =>
            {
                combo.TextField = "Name";
                combo.ValueField = "id";
                combo.ValueType = typeof(string);
                combo.DataSource = ViewBag.PackUnit;
                combo.Columns.Add("id", IWSLocalResource.id, Unit.Percentage(50));
                combo.Columns.Add("name", IWSLocalResource.vat, Unit.Percentage(50));
                combo.TextFormatString = "{1}";
            });
            column.Width = Unit.Percentage(15);
            column.Visible = false;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Updated";
            column.Caption = IWSLocalResource.Updated;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.EditorProperties().DateEdit(d =>
            {
                d.EditFormatString = "MM/dd/yyyy";
                d.EditFormat = EditFormat.Custom;
                d.Width = Unit.Percentage(100);
                d.DisplayFormatString = "yyyy-MM-dd";
            });
            column.Width = Unit.Percentage(8);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Posted";
            column.Caption = IWSLocalResource.Posted;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.EditorProperties().DateEdit(d =>
            {
                d.EditFormat = EditFormat.Custom;
                d.Width = Unit.Percentage(100);
                d.DisplayFormatString = "yyyy-MM-dd";
            });
            column.Width = Unit.Percentage(8);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Description";
            column.Caption = IWSLocalResource.description;
            column.Width = Unit.Percentage(25);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Rate";
            column.Caption = IWSLocalResource.DecliningRate;
            column.Width = Unit.Percentage(10);
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Depreciation";
            column.Caption = IWSLocalResource.Depreciation;
            column.ColumnType = MVCxGridViewColumnType.Default;
            column.Width = Unit.Percentage(25);
        });
        #region Template Edit
        settings.SetEditFormTemplateContent(templateContent =>
        {

            Html.DevExpress().FormLayout(formLayoutSettings =>
            {
                formLayoutSettings.Name = "AssetsGridViewEdit";

                formLayoutSettings.Width = Unit.Percentage(100);

                formLayoutSettings.ColCount = 3;

                formLayoutSettings.Items.AddEmptyItem();

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Id";
                    i.Caption = IWSLocalResource.id;
                    i.Width = Unit.Percentage(50);
                    i.NestedExtension().TextBox(s =>
                    {
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75);
                        s.TabIndex = 1;
                    });
                });

                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Name";
                    i.Caption = IWSLocalResource.name;
                    i.Width = Unit.Percentage(50);
                    i.NestedExtension().TextBox(s =>
                    {
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75);
                        s.TabIndex = 2;
                    });
                });

                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "ScrapValue";
                    i.Caption = IWSLocalResource.ScrapValue;
                    i.Width = Unit.Percentage(50);
                    i.NestedExtension().TextBox(s =>
                    {
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Properties.DisplayFormatString = "N";
                        s.Width = Unit.Percentage(75);
                        s.TabIndex = 4;
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Currency";
                    i.Caption = IWSLocalResource.Currency;
                    i.NestedExtension().ComboBox(s =>
                    {
                        s.Properties.TextField = "name";
                        s.Properties.ValueField = "id";
                        s.Properties.ValueType = typeof(string);
                        s.Properties.DataSource = ViewBag.Currency;
                        s.Properties.Columns.Add(column =>
                        {
                            column.FieldName = "id";
                            column.Caption = IWSLocalResource.id;
                            column.Width = Unit.Percentage(15);

                        });
                        s.Properties.Columns.Add(column =>
                        {
                            column.FieldName = "name";
                            column.Caption = IWSLocalResource.Currency;
                            column.Width = Unit.Percentage(85);

                        });
                        s.Properties.TextFormatString = "{1}";
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75.1);
                        s.TabIndex = 5;
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "LifeSpan";
                    i.Caption = IWSLocalResource.LifeSpan;
                    i.Width = Unit.Percentage(50);
                    i.NestedExtension().TextBox(s =>
                    {
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75);
                        s.TabIndex = 6;
                    });
                });
                //formLayoutSettings.Items.AddEmptyItem();
                //formLayoutSettings.Items.AddEmptyItem();

                //formLayoutSettings.Items.Add(i =>
                //{
                //    i.FieldName = "Frequency";
                //    i.Caption = IWSLocalResource.Frequency;
                //    i.Width = Unit.Percentage(50);
                //    i.NestedExtension().TextBox(s =>
                //    {
                //        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                //        s.ShowModelErrors = true;
                //        s.Width = Unit.Percentage(75);
                //        s.TabIndex = 7;
                //    });
                //});
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Depreciation";
                    i.Caption = IWSLocalResource.Depreciation;
                    i.Width = Unit.Percentage(50);
                    i.NestedExtension().RadioButtonList(s =>
                    {
                        s.Width = Unit.Percentage(75);
                        s.Properties.RepeatDirection = RepeatDirection.Horizontal;
                        s.Properties.Items.Add("items1", (int)IWSLookUp.DepreciationType.StraightLine).Text = IWSLocalResource.StraghtLineDepreciation;
                        s.Properties.Items.Add("items2", (int)IWSLookUp.DepreciationType.Degressive).Text = IWSLocalResource.Degressive;
                        s.Properties.ValidationSettings.RequiredField.IsRequired = true;
                        s.TabIndex = 8;
                        //s.Properties.ClientSideEvents.ValueChanged = "OnValueChanged";
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Rate";
                    i.Caption = IWSLocalResource.DecliningRate;
                    i.Width = Unit.Percentage(50);

                    i.NestedExtension().TextBox(s =>
                    {
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Properties.DisplayFormatString = "P";
                        s.Width = Unit.Percentage(75);
                        s.TabIndex = 9;
                    });
                });

                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Account";
                    i.Caption = IWSLocalResource.account;
                    i.NestedExtension().ComboBox(s =>
                    {
                        s.Properties.TextField = "name";
                        s.Properties.ValueField = "id";
                        s.Properties.ValueType = typeof(string);
                        s.Properties.DataSource = ViewBag.ComboAccountId;
                        s.Properties.Columns.Add(column =>
                        {
                            column.FieldName = "id";
                            column.Caption = IWSLocalResource.id;
                            column.Width = Unit.Percentage(15);

                        });
                        s.Properties.Columns.Add(column =>
                        {
                            column.FieldName = "name";
                            column.Caption = IWSLocalResource.account;
                            column.Width = Unit.Percentage(85);

                        });
                        s.Properties.TextFormatString = "{0}-{1}";
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75.1);
                        s.TabIndex = 10;
                    });
                });

                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "OAccount";
                    i.Caption = IWSLocalResource.oaccount;
                    i.NestedExtension().ComboBox(s =>
                    {
                        s.Properties.TextField = "name";
                        s.Properties.ValueField = "id";
                        s.Properties.ValueType = typeof(string);
                        s.Properties.DataSource = ViewBag.ComboAccountId;
                        s.Properties.Columns.Add(column =>
                        {
                            column.FieldName = "id";
                            column.Caption = IWSLocalResource.id;
                            column.Width = Unit.Percentage(15);

                        });
                        s.Properties.Columns.Add(column =>
                        {
                            column.FieldName = "name";
                            column.Caption = IWSLocalResource.account;
                            column.Width = Unit.Percentage(85);

                        });
                        s.Properties.TextFormatString = "{0}-{1}";
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75.1);
                        s.TabIndex = 11;
                    });
                });

                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();

                formLayoutSettings.Items.Add(i =>
                {
                    i.FieldName = "Description";
                    i.Caption = IWSLocalResource.description;
                    i.Width = Unit.Percentage(50);
                    i.NestedExtension().Memo(s =>
                    {
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(75);
                        s.Height = Unit.Pixel(80);
                        s.TabIndex = 12;
                    });
                });
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.AddEmptyItem();
                formLayoutSettings.Items.Add(i =>
                {
                    i.ShowCaption = DefaultBoolean.False;
                    i.HorizontalAlign = FormLayoutHorizontalAlign.Center;
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().Button(
                b =>
                {
                    b.Name = "btnUpdate";
                    b.Text = IWSLocalResource.btnUpdate;
                    b.ToolTip = IWSLocalResource.btnUpdate;
                    b.Style[HtmlTextWriterStyle.MarginRight] = "5px";
                    b.Images.Image.IconID = IconID.ActionsApply16x16;
                    b.Width = Unit.Pixel(80);
                    b.ClientSideEvents.Click = "function(s, e){ AssetsGridView.UpdateEdit(); }";
                    b.TabIndex = 13;
                }).Render();

                    Html.DevExpress().Button(
                b =>
                {
                    b.Name = "btnCancel";
                    b.Text = IWSLocalResource.btnCancel;
                    b.ToolTip = IWSLocalResource.btnCancel;
                    b.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                    b.Images.Image.IconID = IconID.ActionsCancel16x16;
                    b.Width = Unit.Pixel(80);
                    b.ClientSideEvents.Click = "function(s, e){ AssetsGridView.CancelEdit(); }";
                    b.TabIndex = 14;
                }).Render();
                });
            })
            .Bind(ViewBag.Assets ?? templateContent.DataItem)
            .Render();
        });
        #endregion

        settings.DataBinding = (sender, e) =>
        {
            ((MVCxGridView)sender).ForceDataRowType(typeof(Asset));
        };
    });
    if (ViewData["GenericError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["GenericError"]);
    }
}
@grid.Bind(Model).GetHtml()