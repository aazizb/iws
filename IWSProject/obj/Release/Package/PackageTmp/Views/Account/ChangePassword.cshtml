@model IWSProject.Models.ChangePasswordModel
    @using IWSProject.Content
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    Action<MVCxFormLayoutItem> TextBoxSettingsMethod = (item) =>
    {
        item.NestedExtension().TextBox(s =>
        {
            s.Properties.Password = s.Name.Contains("email") || s.Name.Contains("Password");
            s.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
            s.Properties.ValidationSettings.Display = Display.Dynamic;
            s.ShowModelErrors = true;
        });
    };
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "formChangePassword";

    settings.Items.AddGroupItem(group =>
    {
        group.Caption = IWSLocalResource.CurrentPassword;
        group.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;

        group.Items.Add(i => i.OldPassword, TextBoxSettingsMethod).Caption=IWSLocalResource.CurrentPassword;
    });

    settings.Items.AddGroupItem(group =>
    {
        group.Caption = IWSLocalResource.NewPassword;
        group.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
        group.Items.Add(i => i.NewPassword, TextBoxSettingsMethod).Caption=IWSLocalResource.NewPassword;
        group.Items.Add(i => i.ConfirmPassword, TextBoxSettingsMethod).Caption=IWSLocalResource.ConfirmPassword;
    });


    settings.Items.AddGroupItem(group =>
    {
        group.Caption = "  ";
        group.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
        group.Items.Add(i =>
        {
            i.Caption = " ";
            i.NestedExtension().Button(b =>
            {
                b.Name = "signUp";
                b.Text = IWSLocalResource.SignUp;
                b.UseSubmitBehavior = true;
                b.Width = Unit.Pixel(120);
            });
        });
    });

}).GetHtml()
}